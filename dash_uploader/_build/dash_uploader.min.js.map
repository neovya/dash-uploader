{"version":3,"file":"dash_uploader.min.js","mappings":";2BAAA,iBAGA,SAAUA,EAAQC,EAAUC,GAAY,aACtC,GAAKF,GAAWC,EAAhB,CAKA,IAAIE,EAAWH,EAAOI,UAAUC,iBAyJhCC,EAAKC,UAAY,CAUfC,GAAI,SAAUC,EAAOC,GACnBD,EAAQA,EAAME,cACTC,KAAKC,OAAOC,eAAeL,KAC9BG,KAAKC,OAAOJ,GAAS,IAEvBG,KAAKC,OAAOJ,GAAOM,KAAKL,IAS1BM,IAAK,SAAUP,EAAOQ,GA40CxB,IAAqBC,EAAOC,EACtBC,EA50CEX,IAAUP,GACZO,EAAQA,EAAME,cACVM,IAAOf,EACLU,KAAKC,OAAOC,eAAeL,KAw0CXU,EAv0CcF,GAw0CpCG,GADeF,EAv0CCN,KAAKC,OAAOJ,IAw0CdY,QAAQF,KACb,GACXD,EAAMI,OAAOF,EAAO,WAv0CTR,KAAKC,OAAOJ,IAGrBG,KAAKC,OAAS,IAYlBU,KAAM,SAAUd,EAAOe,GAErBA,EAAOC,MAAMlB,UAAUmB,MAAMC,KAAKC,WAClCnB,EAAQA,EAAME,cACd,IAAIkB,GAAiB,EAUrB,OATIjB,KAAKC,OAAOC,eAAeL,IAC7BqB,EAAKlB,KAAKC,OAAOJ,IAAQ,SAAUC,GACjCmB,GAAyD,IAAxCnB,EAASqB,MAAMnB,KAAMY,EAAKE,MAAM,KAAiBG,IACjEjB,MAEQ,YAATH,IACFe,EAAKQ,QAAQ,YACbH,GAAiD,IAAhCjB,KAAKW,KAAKQ,MAAMnB,KAAMY,IAAmBK,IAEpDA,GAOVI,uBAAwB,SAAUxB,GAChC,IAAIyB,EAAItB,KACJuB,EAAQ1B,EAAM2B,aAAaC,MAAMC,OACjCC,EAAQ,GAcZ,SAASC,EAAcC,GACrBA,EAAOC,aAAY,SAAUC,GACvBA,EAAQL,QACVH,GAASQ,EAAQL,OACjBR,EAAKa,GAAS,SAASC,GACrB,GAAIA,EAAMC,OAAQ,CAChB,IAAIC,EAAWF,EAAME,SACrBF,EAAMG,MAAK,SAAUA,GACnBC,EAAgBD,EAAMD,KACrBG,QACML,EAAMM,aACfV,EAAcI,EAAMO,mBAGxBX,EAAcC,IAEdW,MAEDH,GAEL,SAASD,EAAgBD,EAAMD,GAE7BC,EAAKM,aAAeP,EAASQ,UAAU,GACvCf,EAAMxB,KAAKgC,GACXK,IAEF,SAASH,EAAUM,GAEjB,MADAH,IACMG,EAER,SAASH,IACQ,KAATjB,GACJD,EAAEsB,SAASjB,EAAO9B,GA7CtBqB,EAAKrB,EAAM2B,aAAaC,OAAO,SAAUoB,GACvC,IAAIb,EAAQa,EAAKC,mBACZd,EAIDA,EAAMC,OAERG,EAAgBS,EAAKE,YAAaf,EAAME,UAExCN,EAAcI,EAAMO,gBAPpBC,QAqDNQ,yBAA0B,SAAUb,GAClC,IAAIc,EAASjD,KAAKkD,KAAKF,yBACvB,GAAsB,mBAAXC,EACT,OAAOA,EAAOd,GAGhB,IAAIM,EAAeN,EAAKM,cAAgBN,EAAKgB,oBAAsBhB,EAAKiB,UAAYjB,EAAKkB,KACzF,OAAOlB,EAAKmB,KAAO,IAAMb,EAAac,QAAQ,oBAAqB,KASrEC,gBAAiB,SAAUC,GAIzB,IAAIC,GAAQ,EACZ,GAAI1D,KAAKkD,KAAKS,8BACZzC,EAAKlB,KAAK2B,OAAO,SAAUQ,GACzB,OAAKA,EAAKyB,QAAUzB,EAAK0B,OAAOnC,QACF,YAA5BS,EAAK0B,OAAO,GAAGC,UACf3B,EAAK0B,OAAO,GAAGE,OACfL,GAAQ,GACD,IAEJvB,EAAKyB,QAAUzB,EAAK0B,OAAOnC,OAAS,GACU,YAAjDS,EAAK0B,OAAO1B,EAAK0B,OAAOnC,OAAS,GAAGoC,UACpC3B,EAAK0B,OAAO1B,EAAK0B,OAAOnC,OAAS,GAAGqC,OACpCL,GAAQ,GACD,QAJT,KAOEA,GACF,OAAOA,EAmBX,GAdAxC,EAAKlB,KAAK2B,OAAO,SAAUQ,GAUzB,GATKA,EAAKyB,QACR1C,EAAKiB,EAAK0B,QAAQ,SAAUG,GAC1B,GAAuB,YAAnBA,EAAMF,SAGR,OAFAE,EAAMD,OACNL,GAAQ,GACD,KAITA,EACF,OAAO,KAGPA,EACF,OAAO,EAIT,IAAIO,GAAc,EAalB,OAZA/C,EAAKlB,KAAK2B,OAAO,SAAUQ,GACzB,IAAKA,EAAK+B,aAER,OADAD,GAAc,GACP,KAGNA,GAAgBR,GAEnBU,GAAM,WACJnE,KAAKW,KAAK,cACTX,OAEE,GAeToE,aAAc,SAAUC,EAAU/B,EAAagC,EAAYC,GACrDF,aAAoBG,UACtBH,EAAW,CAACA,IAGdnD,EAAKmD,GAAU,SAAUI,GACvB,IAAIC,EACoB,UAApBD,EAAQE,SAAwC,SAAjBF,EAAQG,KACzCF,EAAQD,IAERC,EAAQrF,EAASwF,cAAc,UACzBC,aAAa,OAAQ,QAE3BC,EAAOL,EAAMM,MAAO,CAClBC,WAAY,SACZC,SAAU,WACVC,MAAO,MACPC,OAAQ,QAGVX,EAAQY,YAAYX,GAKpBD,EAAQa,iBAAiB,SAAS,WAChCZ,EAAMa,WACL,IAEAvF,KAAKkD,KAAKoB,YAAeA,GAC5BI,EAAMI,aAAa,WAAY,YAE7BxC,GACFoC,EAAMI,aAAa,kBAAmB,mBAExC5D,EAAKqD,GAAY,SAAUhE,EAAOiF,GAChCd,EAAMI,aAAaU,EAAKjF,MAG1B,IAAIe,EAAItB,KACR0E,EAAMY,iBAAiB,UAAU,SAAUG,GACrCA,EAAEC,OAAOnF,QACXe,EAAEsB,SAAS6C,EAAEC,OAAO/D,MAAO8D,GAC3BA,EAAEC,OAAOnF,MAAQ,OAElB,KACFP,OAQL2F,WAAY,SAAUtB,QACW,IAApBA,EAAS3C,SAClB2C,EAAW,CAACA,IAEdnD,EAAKmD,GAAU,SAAUI,GACvBA,EAAQa,iBAAiB,WAAYtF,KAAK4F,cAAc,GACxDnB,EAAQa,iBAAiB,YAAatF,KAAK4F,cAAc,GACzDnB,EAAQa,iBAAiB,OAAQtF,KAAK6F,QAAQ,KAC7C7F,OAQL8F,aAAc,SAAUzB,QACS,IAApBA,EAAS3C,SAClB2C,EAAW,CAACA,IAEdnD,EAAKmD,GAAU,SAAUI,GACvBA,EAAQsB,oBAAoB,WAAY/F,KAAK4F,cAC7CnB,EAAQsB,oBAAoB,YAAa/F,KAAK4F,cAC9CnB,EAAQsB,oBAAoB,OAAQ/F,KAAK6F,UACxC7F,OASLgG,YAAa,WACX,IAAIC,GAAY,EAOhB,OANA/E,EAAKlB,KAAK2B,OAAO,SAAUQ,GACzB,GAAIA,EAAK6D,cAEP,OADAC,GAAY,GACL,KAGJA,GAQTC,kBAAmB,WACjB,IAAIC,EAAM,EACNC,GAAS,EACTC,EAAsBrG,KAAKkD,KAAKmD,oBAapC,OAZAnF,EAAKlB,KAAK2B,OAAO,SAAUQ,GACzBjB,EAAKiB,EAAK0B,QAAQ,SAASG,GACzB,GAAuB,cAAnBA,EAAMF,YACRqC,GACWE,EAET,OADAD,GAAS,GACF,QAMRA,GAAUD,GAOnBG,OAAQ,WAEN,IAAIC,EAAMvG,KAAKkG,oBACf,IAAY,IAARK,EAAJ,CAIAvG,KAAKW,KAAK,eAEV,IADA,IAAI6F,GAAU,EACLL,EAAM,EAAGA,GAAOnG,KAAKkD,KAAKmD,oBAAsBE,EAAKJ,IAC5DK,EAAUxG,KAAKwD,iBAAgB,IAASgD,EAErCA,GACHrC,GAAM,WACJnE,KAAKW,KAAK,cACTX,QAQPyG,OAAQ,WACNvF,EAAKlB,KAAK2B,OAAO,SAAUQ,GACpBA,EAAK+B,cACR/B,EAAKsE,aASXC,MAAO,WACLxF,EAAKlB,KAAK2B,OAAO,SAAUQ,GACzBA,EAAKuE,YAQTC,OAAQ,WACN,IAAK,IAAIC,EAAI5G,KAAK2B,MAAMD,OAAS,EAAGkF,GAAK,EAAGA,IAC1C5G,KAAK2B,MAAMiF,GAAGD,UAUlBE,SAAU,WACR,IAAIC,EAAY,EACZC,EAAY,EAMhB,OAJA7F,EAAKlB,KAAK2B,OAAO,SAAUQ,GACzB2E,GAAa3E,EAAK0E,WAAa1E,EAAKmB,KACpCyD,GAAa5E,EAAKmB,QAEbyD,EAAY,EAAID,EAAYC,EAAY,GASjDC,QAAS,SAAU7E,EAAMtC,GACvBG,KAAK4C,SAAS,CAACT,GAAOtC,IASxB+C,SAAU,SAAUqE,EAAUpH,GAC5B,IAAI8B,EAAQ,GACZT,EAAK+F,GAAU,SAAU9E,GAEvB,KAAM5C,GAAYA,GAAY4C,EAAKmB,KAAO,KAAQnB,EAAKmB,KAAO,MAAS,GAAoB,MAAdnB,EAAKkB,MAAkC,MAAlBlB,EAAKiB,UAAoB,CACzH,IAAI8D,EAAmBlH,KAAKgD,yBAAyBb,GACrD,GAAInC,KAAKkD,KAAKiE,wBAA0BnH,KAAKoH,wBAAwBF,GAAmB,CACtF,IAAIG,EAAI,IAAIC,EAAStH,KAAMmC,EAAM+E,GAC7BlH,KAAKW,KAAK,YAAa0G,EAAGxH,IAC5B8B,EAAMxB,KAAKkH,OAIhBrH,MACCA,KAAKW,KAAK,aAAcgB,EAAO9B,KACjCqB,EAAKS,GAAO,SAAUQ,GAChBnC,KAAKkD,KAAKoB,YAActE,KAAK2B,MAAMD,OAAS,GAC9C1B,KAAKuH,WAAWvH,KAAK2B,MAAM,IAE7B3B,KAAK2B,MAAMxB,KAAKgC,KACfnC,MACHA,KAAKW,KAAK,iBAAkBgB,EAAO9B,KAUvC0H,WAAY,SAAUpF,GACpB,IAAK,IAAIyE,EAAI5G,KAAK2B,MAAMD,OAAS,EAAGkF,GAAK,EAAGA,IACtC5G,KAAK2B,MAAMiF,KAAOzE,IACpBnC,KAAK2B,MAAMjB,OAAOkG,EAAG,GACrBzE,EAAKqF,QACLxH,KAAKW,KAAK,cAAewB,KAW/BiF,wBAAyB,SAAUF,GACjC,IAAIX,GAAM,EAMV,OALArF,EAAKlB,KAAK2B,OAAO,SAAUQ,GACrBA,EAAK+E,mBAAqBA,IAC5BX,EAAMpE,MAGHoE,GAQTkB,QAAS,WACP,IAAIV,EAAY,EAIhB,OAHA7F,EAAKlB,KAAK2B,OAAO,SAAUQ,GACzB4E,GAAa5E,EAAKmB,QAEbyD,GAQTW,aAAc,WACZ,IAAIpE,EAAO,EAIX,OAHApC,EAAKlB,KAAK2B,OAAO,SAAUQ,GACzBmB,GAAQnB,EAAKuF,kBAERpE,GASTqE,cAAe,WACb,IAAIC,EAAY,EACZC,EAAe,EAOnB,OANA3G,EAAKlB,KAAK2B,OAAO,SAAUQ,GACpBA,EAAKyB,QAAWzB,EAAK2F,QACxBF,GAAazF,EAAKmB,KAAOnB,EAAKuF,eAC9BG,GAAgB1F,EAAK0F,iBAGrBD,IAAcC,EACTE,OAAOC,kBAEXJ,GAAcC,EAGZI,KAAKC,MAAMN,EAAYC,GAFrB,IA2HbP,EAAS3H,UAAY,CAMnBwI,aAAc,WACZ,IAAIC,EAAWC,KAAKC,MAAQtI,KAAKuI,sBACjC,GAAKH,EAAL,CAGA,IAAII,EAAkBxI,KAAKyI,QAAQvF,KAAKwF,qBACpCC,EAAW3I,KAAK0H,eAEpB1H,KAAK4I,aAAeX,KAAKY,KAAKF,EAAW3I,KAAK8I,mBAAqBV,EAAW,IAAM,GACpFpI,KAAK6H,aAAeW,EAAkBxI,KAAK4I,cAAgB,EAAIJ,GAAmBxI,KAAK6H,aACvF7H,KAAK8I,kBAAoBH,IAW3BI,WAAY,SAAU/E,EAAOnE,EAAOmJ,GAClC,OAAQnJ,GACN,IAAK,WACH,GAAIwI,KAAKC,MAAQtI,KAAKuI,sBACpBvI,KAAKyI,QAAQvF,KAAK+F,0BAClB,MAEFjJ,KAAKmI,eACLnI,KAAKyI,QAAQ9H,KAAK,eAAgBX,KAAMgE,GACxChE,KAAKyI,QAAQ9H,KAAK,YAClBX,KAAKuI,sBAAwBF,KAAKC,MAClC,MACF,IAAK,QACHtI,KAAK8H,OAAQ,EACb9H,KAAKwH,OAAM,GACXxH,KAAKyI,QAAQ9H,KAAK,YAAaX,KAAMgJ,EAAShF,GAC9ChE,KAAKyI,QAAQ9H,KAAK,QAASqI,EAAShJ,KAAMgE,GAC1C,MACF,IAAK,UACH,GAAIhE,KAAK8H,MACP,OAEF9H,KAAKmI,eACLnI,KAAKyI,QAAQ9H,KAAK,eAAgBX,KAAMgE,GACxChE,KAAKyI,QAAQ9H,KAAK,YAClBX,KAAKuI,sBAAwBF,KAAKC,MAC9BtI,KAAKkE,eACPlE,KAAK4I,aAAe,EACpB5I,KAAK6H,aAAe,EACpB7H,KAAKyI,QAAQ9H,KAAK,cAAeX,KAAMgJ,EAAShF,IAElD,MACF,IAAK,QACHhE,KAAKyI,QAAQ9H,KAAK,YAAaX,KAAMgE,KAS3C0C,MAAO,WACL1G,KAAK4D,QAAS,EACd5D,KAAKwH,SAOPf,OAAQ,WACNzG,KAAK4D,QAAS,EACd5D,KAAKyI,QAAQnC,UAOfkB,MAAO,SAAU0B,GACflJ,KAAK4I,aAAe,EACpB5I,KAAK6H,aAAe,EACpB,IAAIhE,EAAS7D,KAAK6D,OACdqF,IACFlJ,KAAK6D,OAAS,IAEhB3C,EAAK2C,GAAQ,SAAUsF,GACF,cAAfA,EAAErF,WACJqF,EAAE3B,QACFxH,KAAKyI,QAAQjF,qBAEdxD,OAOL2G,OAAQ,WACN3G,KAAKyI,QAAQlB,WAAWvH,OAO1BoJ,MAAO,WACLpJ,KAAKqJ,YACLrJ,KAAKyI,QAAQnC,UAOf+C,UAAW,WACmC,mBAAjCrJ,KAAKyI,QAAQvF,KAAKoG,YAC3BtJ,KAAKyI,QAAQvF,KAAKoG,WAAWtJ,MAG/BA,KAAKwH,OAAM,GACXxH,KAAK8H,OAAQ,EAEb9H,KAAKuJ,cAAgB,EACrB,IAAIC,EAAQxJ,KAAKyI,QAAQvF,KAAKuG,eAAiBxB,KAAKyB,KAAOzB,KAAKC,MAChElI,KAAK2J,UAAYC,EAAS5J,KAAKyI,QAAQvF,KAAKyG,UAAW3J,MAIvD,IAHA,IAAI6D,EAASoE,KAAKY,IAChBW,EAAMxJ,KAAKsD,KAAOtD,KAAK2J,WAAY,GAE5BE,EAAS,EAAGA,EAAShG,EAAQgG,IACpC7J,KAAK6D,OAAO1D,KACV,IAAI2J,EAAU9J,KAAKyI,QAASzI,KAAM6J,KAUxChD,SAAU,WACR,GAAI7G,KAAK8H,MACP,OAAO,EAET,GAA2B,IAAvB9H,KAAK6D,OAAOnC,OAEd,OADA1B,KAAKuJ,cAAgBtB,KAAKY,IAAI7I,KAAKuJ,cAAevJ,KAAK6D,OAAO,GAAGgD,YAC1D7G,KAAKuJ,cAGd,IAAIQ,EAAc,EAClB7I,EAAKlB,KAAK6D,QAAQ,SAAUsF,GAE1BY,GAAeZ,EAAEtC,YAAcsC,EAAEa,QAAUb,EAAEc,cAE/C,IAAIC,EAAUH,EAAc/J,KAAKsD,KAGjC,OADAtD,KAAKuJ,cAAgBtB,KAAKY,IAAI7I,KAAKuJ,cAAeW,EAAU,MAAS,EAAIA,GAClElK,KAAKuJ,eAQdvD,YAAa,WACX,IAAIC,GAAY,EAOhB,OANA/E,EAAKlB,KAAK6D,QAAQ,SAAUG,GAC1B,GAAuB,cAAnBA,EAAMF,SAER,OADAmC,GAAY,GACL,KAGJA,GAQT/B,WAAY,WACV,IAAID,GAAc,EAQlB,OAPA/C,EAAKlB,KAAK6D,QAAQ,SAAUG,GAC1B,IAAIF,EAASE,EAAMF,SACnB,GAAe,YAAXA,GAAmC,cAAXA,GAAqC,YAAXA,GAAkD,IAA1BE,EAAMmG,iBAA6C,IAApBnG,EAAMoG,UAEjH,OADAnG,GAAc,GACP,MAGHA,GAQVyD,aAAc,WACZ,IAAIpE,EAAO,EAIX,OAHApC,EAAKlB,KAAK6D,QAAQ,SAAUG,GAC1BV,GAAQU,EAAM0D,kBAETpE,GASTqE,cAAe,WACb,GAAI3H,KAAK4D,QAAU5D,KAAK8H,MACtB,OAAO,EAET,IAAIuC,EAAQrK,KAAKsD,KAAOtD,KAAK0H,eAC7B,OAAI2C,IAAUrK,KAAK6H,aACVE,OAAOC,kBAEXqC,GAAUrK,KAAK6H,aAGbI,KAAKC,MAAMmC,EAAQrK,KAAK6H,cAFtB,GAUXyC,QAAS,WACP,OAAOtK,KAAKmC,KAAKyC,MAAQ5E,KAAKmC,KAAKyC,KAAK2F,MAAM,KAAK,IAQrDC,aAAc,WACZ,OAAOxK,KAAKqD,KAAKoH,OAA8C,KAApCzK,KAAKqD,KAAKqH,YAAY,OAAS,IAAQ3K,gBAmNtE+J,EAAUnK,UAAY,CAKpBgL,UAAW,WACT,MAAO,CACLC,gBAAiB5K,KAAK6J,OAAS,EAC/BgB,cAAe7K,KAAK2J,UACpBmB,qBAAsB9K,KAAKgK,QAAUhK,KAAKiK,UAC1Cc,cAAe/K,KAAKgL,QAAQ1H,KAC5B2H,eAAgBjL,KAAKgL,QAAQ9D,iBAC7BgE,aAAclL,KAAKgL,QAAQ3H,KAC3B8H,iBAAkBnL,KAAKgL,QAAQvI,aAC/B2I,gBAAiBpL,KAAKgL,QAAQnH,OAAOnC,SAUzC2J,UAAW,SAAS3F,EAAQ4F,GAC1B,OAAqB,GAAjBA,EAAO5J,OACTgE,GAGCA,EAAOjF,QAAQ,KAAO,EACvBiF,GAAU,IAEVA,GAAU,IAELA,EAAS4F,EAAOC,KAAK,OAQ9BC,KAAM,WAEJxL,KAAKyL,IAAM,IAAIC,eACf1L,KAAKyL,IAAInG,iBAAiB,OAAQtF,KAAK2L,aAAa,GACpD3L,KAAKyL,IAAInG,iBAAiB,QAAStF,KAAK2L,aAAa,GACrD,IAAIC,EAAahC,EAAS5J,KAAKyI,QAAQvF,KAAK0I,WAAY5L,KAAKgL,QAAShL,MAClE6L,EAAO7L,KAAK8L,kBAAkBF,GAAY,GAC9C5L,KAAKyL,IAAI1H,KAAK8H,IAOhBE,mBAAoB,WAGlB/L,KAAKgK,QAAUhK,KAAKgM,iBAEpBhM,KAAKmK,gBAAkB,EACvBnK,KAAK+D,QAOPkI,aAAc,SAAUC,GACtBlM,KAAKoK,UAAY,EACjBpK,KAAKkM,MAAQA,EACblM,KAAK+D,QAQPA,KAAM,WACJ,IAAIoI,EAAanM,KAAKyI,QAAQvF,KAAKiJ,WAC/BC,EAAOpM,KAAKyI,QAAQvF,KAAKmJ,WAC7B,GAA0B,mBAAfF,EACT,OAAQnM,KAAKmK,iBACX,KAAK,EAGH,OAFAnK,KAAKmK,gBAAkB,OACvBgC,EAAWnM,MAEb,KAAK,EACH,OAGN,OAAQA,KAAKoK,WACX,KAAK,EAGH,OAFApK,KAAKoK,UAAY,OACjBgC,EAAKpM,KAAKgL,QAAShL,KAAKiK,UAAWjK,KAAKgK,QAAShK,KAAKgL,QAAQ7I,KAAKyC,KAAM5E,MAE3E,KAAK,EACH,OAEJ,IAAIA,KAAKyI,QAAQvF,KAAKoJ,YAAetM,KAAKuM,OAA1C,CAKAvM,KAAKwM,OAAS,EACdxM,KAAKyM,MAAQ,EACbzM,KAAK0M,cAAe,EAGpB1M,KAAKyL,IAAM,IAAIC,eACf1L,KAAKyL,IAAInF,OAAOhB,iBAAiB,WAAYtF,KAAK2M,iBAAiB,GACnE3M,KAAKyL,IAAInG,iBAAiB,OAAQtF,KAAK4M,aAAa,GACpD5M,KAAKyL,IAAInG,iBAAiB,QAAStF,KAAK4M,aAAa,GAErD,IAAIC,EAAejD,EAAS5J,KAAKyI,QAAQvF,KAAK2J,aAAc7M,KAAKgL,QAAShL,MACtE6L,EAAO7L,KAAK8L,kBAAkBe,GAAc,EAAO7M,KAAKyI,QAAQvF,KAAK4J,OAAQ9M,KAAKkM,OAClFa,EAA0B/M,KAAKyI,QAAQvF,KAAK6J,wBACT,mBAA5BA,IACTlB,EAAOkB,EAAwB/M,KAAM6L,IAEvC7L,KAAKyL,IAAI1H,KAAK8H,QApBZ7L,KAAKwL,QA2BThE,MAAO,WAEL,IAAIiE,EAAMzL,KAAKyL,IACfzL,KAAKyL,IAAM,KACPA,GACFA,EAAIjE,SASR1D,OAAQ,SAAUkJ,GAChB,OAAuB,IAAnBhN,KAAKoK,UACA,UACEpK,KAAK0M,cAAyC,IAAzB1M,KAAKmK,gBAG5B,YACGnK,KAAKyL,IAENzL,KAAKyL,IAAIwB,WAAa,EAGxB,YAEHjN,KAAKyI,QAAQvF,KAAKgK,gBAAgBzM,QAAQT,KAAKyL,IAAI3H,SAAW,EAGzD,UACE9D,KAAKyI,QAAQvF,KAAKiK,gBAAgB1M,QAAQT,KAAKyL,IAAI3H,SAAW,IACpEkJ,GAAUhN,KAAKoN,SAAWpN,KAAKyI,QAAQvF,KAAKmK,gBAExC,SAIPrN,KAAKwH,QACE,WAlBF,WA4BXwB,QAAS,WACP,OAAOhJ,KAAKyL,IAAMzL,KAAKyL,IAAI6B,aAAe,IAQ5CzG,SAAU,WACR,GAAI7G,KAAK0M,aACP,OAAO,EAET,IAAIa,EAAIvN,KAAK8D,SACb,MAAU,YAANyJ,GAAyB,UAANA,EACd,EACQ,YAANA,EACF,EAEAvN,KAAKyM,MAAQ,EAAIzM,KAAKwM,OAASxM,KAAKyM,MAAQ,GASvD/E,aAAc,WACZ,IAAIpE,EAAOtD,KAAKgK,QAAUhK,KAAKiK,UAK/B,MAHsB,YAAlBjK,KAAK8D,WACPR,EAAOtD,KAAK6G,WAAavD,GAEpBA,GAWTwI,kBAAmB,SAASgB,EAAQE,EAAQQ,EAAcC,GAExD,IAAIC,EAAQ9D,EAAS5J,KAAKyI,QAAQvF,KAAKwK,MAAO1N,KAAKgL,QAAShL,KAAMgN,GAClEU,EAAQ3I,EAAO2I,GAAS,GAAI1N,KAAK2K,aAEjC,IAAIjF,EAASkE,EAAS5J,KAAKyI,QAAQvF,KAAKwC,OAAQ1F,KAAKgL,QAAShL,KAAMgN,GAChEnB,EAAO,KACX,GAAe,QAAXiB,GAAqC,UAAjBU,EAA0B,CAEhD,IAAIlC,EAAS,GACbpK,EAAKwM,GAAO,SAAUC,EAAGC,GACvBtC,EAAOnL,KAAK,CAAC0N,mBAAmBD,GAAIC,mBAAmBF,IAAIpC,KAAK,SAElE7F,EAAS1F,KAAKqL,UAAU3F,EAAQ4F,GAChCO,EAAO4B,GAAQ,UAGf5B,EAAO,IAAIiC,SACX5M,EAAKwM,GAAO,SAAUC,EAAGC,GACvB/B,EAAKkC,OAAOH,EAAGD,WAEG,IAATF,GACP5B,EAAKkC,OAAO/N,KAAKyI,QAAQvF,KAAK8K,kBAAmBP,EAAMzN,KAAKiO,UAAYjO,KAAKgL,QAAQ7I,KAAKkB,MAYhG,OARArD,KAAKyL,IAAIyC,KAAKpB,EAAQpH,GAAQ,GAC9B1F,KAAKyL,IAAI0C,gBAAkBnO,KAAKyI,QAAQvF,KAAKiL,gBAG7CjN,EAAK0I,EAAS5J,KAAKyI,QAAQvF,KAAKkL,QAASpO,KAAKgL,QAAShL,KAAMgN,IAAS,SAAUW,EAAGC,GACjF5N,KAAKyL,IAAI4C,iBAAiBT,EAAGD,KAC5B3N,MAEI6L,IA8BXnM,EAAKkK,SAAWA,EA6BhBlK,EAAKqF,OAASA,EA8BdrF,EAAKwB,KAAOA,EAMZxB,EAAK4H,SAAWA,EAMhB5H,EAAKoK,UAAYA,EAMjBpK,EAAK4O,QAAU,iBAEoBC,GAAoC,iBAAnBA,EAAOC,QAKzDD,EAAOC,QAAU9O,GAGjBN,EAAOM,KAAOA,GAUQ,EAAF,WAAgB,OAAOA,GAAO,QAAhC,OAAgC,uBAvnDlD+O,QAAQC,KAAK,oDAmCf,SAAShP,EAAKwD,GAeZ,GAVAlD,KAAK2O,UACe,oBAATC,MACS,oBAATC,MACa,oBAAbC,WAEHD,KAAKlP,UAAUmB,QAAW+N,KAAKlP,UAAUoP,cAAiBF,KAAKlP,UAAUqP,UAK5EhP,KAAK2O,QAAV,CAQA3O,KAAKiP,iBACD,SAASzD,KAAKpM,EAAOI,UAAU0P,YAC/B,UAAU1D,KAAKpM,EAAOI,UAAU0P,YAChC,OAAO1D,KAAKpM,EAAOI,UAAU0P,WAOjClP,KAAK2B,MAAQ,GAMb3B,KAAKmP,SAAW,CACdxF,UAAW,QACXF,gBAAgB,EAChBpD,oBAAqB,EACrB/B,YAAY,EACZ0J,kBAAmB,OACnB/E,0BAA2B,IAC3BP,qBAAsB,GACtBgF,MAAO,GACPU,QAAS,GACTD,iBAAiB,EACjBhC,WAAY,KACZY,wBAAyB,KACzBD,OAAQ,YACRlB,WAAY,MACZiB,aAAc,OACdlJ,6BAA6B,EAC7BwD,uBAAuB,EACvBzB,OAAQ,IACR4G,YAAY,EACZtJ,yBAA0B,KAC1BqK,gBAAiB,EACjB+B,mBAAoB,KACpBjC,gBAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,KACtCD,gBAAiB,CAAC,IAAK,IAAK,KAC5BmC,uBAAuB,EACvB/F,WAAY,KACZ+C,WAAYiD,GAOdtP,KAAKkD,KAAO,GAQZlD,KAAKC,OAAS,GAEd,IAAIqB,EAAItB,KAORA,KAAK6F,OAAS,SAAUhG,GAClByB,EAAE4B,KAAKmM,uBACTxP,EAAM0P,kBAER1P,EAAMoB,iBACN,IAAIO,EAAe3B,EAAM2B,aACrBA,EAAaC,OAASD,EAAaC,MAAM,IAC3CD,EAAaC,MAAM,GAAGqB,iBACtBxB,EAAED,uBAAuBxB,GAEzByB,EAAEsB,SAASpB,EAAaG,MAAO9B,IASnCG,KAAK4F,aAAe,SAAU/F,GAC5BA,EAAMoB,kBAQRjB,KAAKkD,KAAOxD,EAAKqF,OAAO,GAAI/E,KAAKmP,SAAUjM,GAAQ,KAwiBrD,SAASoE,EAASmB,EAAStG,EAAM+E,GAM/BlH,KAAKyI,QAAUA,EAMfzI,KAAKkM,MAAQ,KAMblM,KAAKmC,KAAOA,EAMZnC,KAAKqD,KAAOlB,EAAKiB,UAAYjB,EAAKkB,KAMlCrD,KAAKsD,KAAOnB,EAAKmB,KAMjBtD,KAAKyC,aAAeN,EAAKM,cAAgBN,EAAKgB,oBAAsBnD,KAAKqD,KAMzErD,KAAKkH,iBAAoBA,IAAqB5H,EAAYmJ,EAAQzF,yBAAyBb,GAAQ+E,EAMnGlH,KAAK2J,UAAY,EAMjB3J,KAAK6D,OAAS,GAMd7D,KAAK4D,QAAS,EAMd5D,KAAK8H,OAAQ,EAMb9H,KAAK6H,aAAe,EAMpB7H,KAAK4I,aAAe,EAOpB5I,KAAKuI,sBAAwBF,KAAKC,MAOlCtI,KAAK8I,kBAAoB,EAOzB9I,KAAKuJ,cAAgB,EAErBvJ,KAAKqJ,YAuQP,SAASiG,EAAetE,EAASf,EAAWD,EAASwF,EAAUxL,GAC7D,IAAIyL,EAAgB,QAEhBzE,EAAQ7I,KAAKrB,MACf2O,EAAiB,QACVzE,EAAQ7I,KAAK6M,SACpBS,EAAgB,WACTzE,EAAQ7I,KAAK4M,cACpBU,EAAgB,eAElBzL,EAAMiI,aAAajB,EAAQ7I,KAAKsN,GAAexF,EAAWD,EAASwF,IAYrE,SAAS1F,EAAUrB,EAASuC,EAASnB,GAMnC7J,KAAKyI,QAAUA,EAMfzI,KAAKgL,QAAUA,EAMfhL,KAAK6J,OAASA,EAMd7J,KAAKuM,QAAS,EAMdvM,KAAKoN,QAAU,EAMfpN,KAAK0M,cAAe,EAMpB1M,KAAKmK,gBAAkB,EAMvBnK,KAAKoK,UAAY,EAOjBpK,KAAKwM,OAAS,EAMdxM,KAAKyM,MAAQ,EAMbzM,KAAK2J,UAAY3J,KAAKgL,QAAQrB,UAM9B3J,KAAKiK,UAAYjK,KAAK6J,OAAS7J,KAAK2J,UAMpC3J,KAAKiO,SAAW,KAMhBjO,KAAKgM,eAAiB,WACpB,IAAIhC,EAAU/B,KAAKyH,IAAI1P,KAAKgL,QAAQ1H,MAAOtD,KAAK6J,OAAS,GAAK7J,KAAK2J,WAMnE,OALI3J,KAAKgL,QAAQ1H,KAAO0G,EAAUhK,KAAK2J,YAAc3J,KAAKyI,QAAQvF,KAAKuG,iBAGrEO,EAAUhK,KAAKgL,QAAQ1H,MAElB0G,GAOThK,KAAKgK,QAAUhK,KAAKgM,iBAMpBhM,KAAKyL,IAAM,KAEX,IAAInK,EAAItB,KAORA,KAAKH,MAAQ,SAAUA,EAAOe,IAC5BA,EAAOC,MAAMlB,UAAUmB,MAAMC,KAAKC,YAC7BI,QAAQE,GACbA,EAAE0J,QAAQjC,WAAW5H,MAAMG,EAAE0J,QAASpK,IAMxCZ,KAAK2M,gBAAkB,SAAS9M,GAC1BA,EAAM8P,mBACRrO,EAAEkL,OAAS3M,EAAM2M,OACjBlL,EAAEmL,MAAQ5M,EAAM4M,OAElBnL,EAAEzB,MAAM,WAAYA,IAOtBG,KAAK2L,YAAc,SAAS9L,GAC1B,IAAIiE,EAASxC,EAAEwC,QAAO,GACP,UAAXA,GACFxC,EAAEzB,MAAMiE,EAAQxC,EAAE0H,WAClB1H,EAAEmH,QAAQjF,mBACU,YAAXM,GACTxC,EAAEiL,QAAS,EACXjL,EAAEzB,MAAMiE,EAAQxC,EAAE0H,WAClB1H,EAAEmH,QAAQjF,mBACAlC,EAAE0J,QAAQpH,SAGpBtC,EAAEiL,QAAS,EACXjL,EAAEyC,SAQN/D,KAAK4M,YAAc,SAAS/M,GAC1B,IAAIiE,EAASxC,EAAEwC,SACf,GAAe,YAAXA,GAAmC,UAAXA,SACnB9D,KAAK6L,KACZvK,EAAEzB,MAAMiE,EAAQxC,EAAE0H,WAClB1H,EAAEmH,QAAQjF,uBACL,IAAKlC,EAAE0J,QAAQpH,OAAQ,CAC5BtC,EAAEzB,MAAM,QAASyB,EAAE0H,WACnB1H,EAAEoL,cAAe,EACjBpL,EAAEkG,QACFlG,EAAE8L,UACF,IAAIwC,EAAgBtO,EAAEmH,QAAQvF,KAAKkM,mBACb,OAAlBQ,EACFC,YAAW,WACTvO,EAAEyC,SACD6L,GAEHtO,EAAEyC,SA8RV,SAAS6F,EAASiC,EAAMjL,GAMtB,MALoB,mBAATiL,IAETjL,EAAOC,MAAMlB,UAAUmB,MAAMC,KAAKC,WAClC6K,EAAOA,EAAK1K,MAAM,KAAMP,EAAKE,MAAM,KAE9B+K,EAST,SAAS1H,EAAM9D,EAAIyP,GACjBD,WAAWxP,EAAG0P,KAAKD,GAAU,GAW/B,SAAS/K,EAAOiL,EAAKC,GAQnB,OAPA/O,EAAKF,WAAW,SAASkP,GACnBA,IAAQF,GACV9O,EAAKgP,GAAK,SAAS3P,EAAOiF,GACxBwK,EAAIxK,GAAOjF,QAIVyP,EAWT,SAAS9O,EAAKgP,EAAKpQ,EAAUgQ,GAI3B,IAAItK,EAHJ,GAAK0K,EAML,QAA2B,IAAhBA,EAAU,QACnB,IAAK1K,EAAM,EAAGA,EAAM0K,EAAIxO,OAAQ8D,IAC9B,IAA8C,IAA1C1F,EAASiB,KAAK+O,EAASI,EAAI1K,GAAMA,GACnC,YAIJ,IAAKA,KAAO0K,EACV,GAAIA,EAAIhQ,eAAesF,KAAkD,IAA1C1F,EAASiB,KAAK+O,EAASI,EAAI1K,GAAMA,GAC9D,QA9kDV,CA4nDqB,oBAAXpG,QAA0BA,OAA4B,oBAAbC,UAA4BA,qFC5nD3E8Q,QAA0B,GAA4B,KAE1DA,EAAwBhQ,KAAK,CAACoO,EAAO6B,GAAI,uOAAwO,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,+CAA+C,MAAQ,GAAG,SAAW,uEAAuE,eAAiB,CAAC,wOAAwO,WAAa,MAE/rB,gCCDA7B,EAAOC,QAAU,SAAU6B,GACzB,IAAIC,EAAO,GA6FX,OA3FAA,EAAKC,SAAW,WACd,OAAOvQ,KAAKwQ,KAAI,SAAU3N,GACxB,IAAI4N,EAAU,GACVC,OAA+B,IAAZ7N,EAAK,GA4B5B,OA1BIA,EAAK,KACP4N,GAAW,cAAcE,OAAO9N,EAAK,GAAI,QAGvCA,EAAK,KACP4N,GAAW,UAAUE,OAAO9N,EAAK,GAAI,OAGnC6N,IACFD,GAAW,SAASE,OAAO9N,EAAK,GAAGnB,OAAS,EAAI,IAAIiP,OAAO9N,EAAK,IAAM,GAAI,OAG5E4N,GAAWJ,EAAuBxN,GAE9B6N,IACFD,GAAW,KAGT5N,EAAK,KACP4N,GAAW,KAGT5N,EAAK,KACP4N,GAAW,KAGNA,KACNlF,KAAK,KAIV+E,EAAK1J,EAAI,SAAWgK,EAASC,EAAOC,EAAQC,EAAUC,GAC7B,iBAAZJ,IACTA,EAAU,CAAC,CAAC,KAAMA,OAAStR,KAG7B,IAAI2R,EAAyB,GAE7B,GAAIH,EACF,IAAK,IAAIlD,EAAI,EAAGA,EAAI5N,KAAK0B,OAAQkM,IAAK,CACpC,IAAIwC,EAAKpQ,KAAK4N,GAAG,GAEP,MAANwC,IACFa,EAAuBb,IAAM,GAKnC,IAAK,IAAIc,EAAK,EAAGA,EAAKN,EAAQlP,OAAQwP,IAAM,CAC1C,IAAIrO,EAAO,GAAG8N,OAAOC,EAAQM,IAEzBJ,GAAUG,EAAuBpO,EAAK,WAIrB,IAAVmO,SACc,IAAZnO,EAAK,KAGdA,EAAK,GAAK,SAAS8N,OAAO9N,EAAK,GAAGnB,OAAS,EAAI,IAAIiP,OAAO9N,EAAK,IAAM,GAAI,MAAM8N,OAAO9N,EAAK,GAAI,MAF/FA,EAAK,GAAKmO,GAOVH,IACGhO,EAAK,IAGRA,EAAK,GAAK,UAAU8N,OAAO9N,EAAK,GAAI,MAAM8N,OAAO9N,EAAK,GAAI,KAC1DA,EAAK,GAAKgO,GAHVhO,EAAK,GAAKgO,GAOVE,IACGlO,EAAK,IAGRA,EAAK,GAAK,cAAc8N,OAAO9N,EAAK,GAAI,OAAO8N,OAAO9N,EAAK,GAAI,KAC/DA,EAAK,GAAKkO,GAHVlO,EAAK,GAAK,GAAG8N,OAAOI,IAOxBT,EAAKnQ,KAAK0C,MAIPyN,yBClGT/B,EAAOC,QAAU,SAAU3L,GACzB,IAAI4N,EAAU5N,EAAK,GACfsO,EAAatO,EAAK,GAEtB,IAAKsO,EACH,OAAOV,EAGT,GAAoB,mBAATW,KAAqB,CAC9B,IAAIC,EAASD,KAAKE,SAASzD,mBAAmB0D,KAAKC,UAAUL,MACzDtF,EAAO,+DAA+D8E,OAAOU,GAC7EI,EAAgB,OAAOd,OAAO9E,EAAM,OACpC6F,EAAaP,EAAWQ,QAAQnB,KAAI,SAAUoB,GAChD,MAAO,iBAAiBjB,OAAOQ,EAAWU,YAAc,IAAIlB,OAAOiB,EAAQ,UAE7E,MAAO,CAACnB,GAASE,OAAOe,GAAYf,OAAO,CAACc,IAAgBlG,KAAK,MAGnE,MAAO,CAACkF,GAASlF,KAAK,6BClBxB,IAAIuG,EAAc,GAElB,SAASC,EAAqBC,GAG5B,IAFA,IAAIC,GAAU,EAELrL,EAAI,EAAGA,EAAIkL,EAAYpQ,OAAQkF,IACtC,GAAIkL,EAAYlL,GAAGoL,aAAeA,EAAY,CAC5CC,EAASrL,EACT,MAIJ,OAAOqL,EAGT,SAASC,EAAa5B,EAAM6B,GAI1B,IAHA,IAAIC,EAAa,GACbC,EAAc,GAETzL,EAAI,EAAGA,EAAI0J,EAAK5O,OAAQkF,IAAK,CACpC,IAAI/D,EAAOyN,EAAK1J,GACZwJ,EAAK+B,EAAQG,KAAOzP,EAAK,GAAKsP,EAAQG,KAAOzP,EAAK,GAClD0P,EAAQH,EAAWhC,IAAO,EAC1B4B,EAAa,GAAGrB,OAAOP,EAAI,KAAKO,OAAO4B,GAC3CH,EAAWhC,GAAMmC,EAAQ,EACzB,IAAIC,EAAoBT,EAAqBC,GACzC9B,EAAM,CACRuC,IAAK5P,EAAK,GACVgO,MAAOhO,EAAK,GACZ6P,UAAW7P,EAAK,GAChBkO,SAAUlO,EAAK,GACfmO,MAAOnO,EAAK,IAGd,IAA2B,IAAvB2P,EACFV,EAAYU,GAAmBG,aAC/Bb,EAAYU,GAAmBI,QAAQ1C,OAClC,CACL,IAAI0C,EAAUC,EAAgB3C,EAAKiC,GACnCA,EAAQW,QAAUlM,EAClBkL,EAAYpR,OAAOkG,EAAG,EAAG,CACvBoL,WAAYA,EACZY,QAASA,EACTD,WAAY,IAIhBN,EAAYlS,KAAK6R,GAGnB,OAAOK,EAGT,SAASQ,EAAgB3C,EAAKiC,GAC5B,IAAIY,EAAMZ,EAAQa,OAAOb,GAezB,OAdAY,EAAIE,OAAO/C,GAEG,SAAiBgD,GAC7B,GAAIA,EAAQ,CACV,GAAIA,EAAOT,MAAQvC,EAAIuC,KAAOS,EAAOrC,QAAUX,EAAIW,OAASqC,EAAOR,YAAcxC,EAAIwC,WAAaQ,EAAOnC,WAAab,EAAIa,UAAYmC,EAAOlC,QAAUd,EAAIc,MACzJ,OAGF+B,EAAIE,OAAO/C,EAAMgD,QAEjBH,EAAII,UAOV5E,EAAOC,QAAU,SAAU8B,EAAM6B,GAG/B,IAAIiB,EAAkBlB,EADtB5B,EAAOA,GAAQ,GADf6B,EAAUA,GAAW,IAGrB,OAAO,SAAgBkB,GACrBA,EAAUA,GAAW,GAErB,IAAK,IAAIzM,EAAI,EAAGA,EAAIwM,EAAgB1R,OAAQkF,IAAK,CAC/C,IACIpG,EAAQuR,EADKqB,EAAgBxM,IAEjCkL,EAAYtR,GAAOmS,aAKrB,IAFA,IAAIW,EAAqBpB,EAAamB,EAASlB,GAEtCoB,EAAK,EAAGA,EAAKH,EAAgB1R,OAAQ6R,IAAM,CAClD,IAEIC,EAASzB,EAFKqB,EAAgBG,IAIK,IAAnCzB,EAAY0B,GAAQb,aACtBb,EAAY0B,GAAQZ,UAEpBd,EAAYpR,OAAO8S,EAAQ,IAI/BJ,EAAkBE,0BCnGtB,IAAIG,EAAO,GAoCXlF,EAAOC,QAVP,SAA0BkF,EAAQ1O,GAChC,IAAIU,EAxBN,SAAmBA,GACjB,QAA4B,IAAjB+N,EAAK/N,GAAyB,CACvC,IAAIiO,EAActU,SAASuU,cAAclO,GAEzC,GAAItG,OAAOyU,mBAAqBF,aAAuBvU,OAAOyU,kBAC5D,IAGEF,EAAcA,EAAYG,gBAAgBC,KAC1C,MAAOtO,GAEPkO,EAAc,KAIlBF,EAAK/N,GAAUiO,EAGjB,OAAOF,EAAK/N,GAMC2F,CAAUqI,GAEvB,IAAKhO,EACH,MAAM,IAAIsO,MAAM,2GAGlBtO,EAAOL,YAAYL,0BCzBrBuJ,EAAOC,QAPP,SAA4B2D,GAC1B,IAAI8B,EAAU5U,SAASwF,cAAc,SAGrC,OAFAsN,EAAQ+B,cAAcD,EAAS9B,EAAQ5N,YACvC4N,EAAQuB,OAAOO,EAAS9B,EAAQA,SACzB8B,+BCIT1F,EAAOC,QARP,SAAwC2F,GACtC,IAAIC,EAAmD,KAEnDA,GACFD,EAAarP,aAAa,QAASsP,0BC8DvC7F,EAAOC,QAZP,SAAgB2D,GACd,IAAIgC,EAAehC,EAAQkC,mBAAmBlC,GAC9C,MAAO,CACLc,OAAQ,SAAgB/C,IAzD5B,SAAeiE,EAAchC,EAASjC,GACpC,IAAIuC,EAAM,GAENvC,EAAIa,WACN0B,GAAO,cAAc9B,OAAOT,EAAIa,SAAU,QAGxCb,EAAIW,QACN4B,GAAO,UAAU9B,OAAOT,EAAIW,MAAO,OAGrC,IAAIH,OAAiC,IAAdR,EAAIc,MAEvBN,IACF+B,GAAO,SAAS9B,OAAOT,EAAIc,MAAMtP,OAAS,EAAI,IAAIiP,OAAOT,EAAIc,OAAS,GAAI,OAG5EyB,GAAOvC,EAAIuC,IAEP/B,IACF+B,GAAO,KAGLvC,EAAIW,QACN4B,GAAO,KAGLvC,EAAIa,WACN0B,GAAO,KAGT,IAAIC,EAAYxC,EAAIwC,UAEhBA,GAA6B,oBAATtB,OACtBqB,GAAO,uDAAuD9B,OAAOS,KAAKE,SAASzD,mBAAmB0D,KAAKC,UAAUkB,MAAe,QAMtIP,EAAQmC,kBAAkB7B,EAAK0B,EAAchC,EAAQA,SAkBjDhR,CAAMgT,EAAchC,EAASjC,IAE/BiD,OAAQ,YAjBZ,SAA4BgB,GAE1B,GAAgC,OAA5BA,EAAaI,WACf,OAAO,EAGTJ,EAAaI,WAAWC,YAAYL,GAYhCM,CAAmBN,4BCjDzB5F,EAAOC,QAZP,SAA2BiE,EAAK0B,GAC9B,GAAIA,EAAaO,WACfP,EAAaO,WAAWC,QAAUlC,MAC7B,CACL,KAAO0B,EAAaS,YAClBT,EAAaK,YAAYL,EAAaS,YAGxCT,EAAa9O,YAAYhG,SAASwV,eAAepC,QCVjDqC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB1V,IAAjB2V,EACH,OAAOA,EAAazG,QAGrB,IAAID,EAASuG,EAAyBE,GAAY,CACjD5E,GAAI4E,EACJxI,QAAQ,EACRgC,QAAS,IAUV,OANA0G,EAAoBF,GAAUzG,EAAQA,EAAOC,QAASuG,GAGtDxG,EAAO/B,QAAS,EAGT+B,EAAOC,QCvBfuG,EAAoBI,EAAK5G,IACxB,IAAI6G,EAAS7G,GAAUA,EAAO8G,WAC7B,IAAO9G,EAAiB,QACxB,IAAM,EAEP,OADAwG,EAAoBO,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRL,EAAoBO,EAAI,CAAC9G,EAASgH,KACjC,IAAI,IAAIhQ,KAAOgQ,EACXT,EAAoBU,EAAED,EAAYhQ,KAASuP,EAAoBU,EAAEjH,EAAShJ,IAC5EkQ,OAAOC,eAAenH,EAAShJ,EAAK,CAAEoQ,YAAY,EAAMC,IAAKL,EAAWhQ,MCJ3EuP,EAAoBU,EAAI,CAACvF,EAAK4F,IAAUJ,OAAO/V,UAAUO,eAAea,KAAKmP,EAAK4F,GCClFf,EAAoBgB,EAAKvH,IACH,oBAAXwH,QAA0BA,OAAOC,aAC1CP,OAAOC,eAAenH,EAASwH,OAAOC,YAAa,CAAE1V,MAAO,WAE7DmV,OAAOC,eAAenH,EAAS,aAAc,CAAEjO,OAAO,KCLvDwU,EAAoBmB,IAAO3H,IAC1BA,EAAO4H,MAAQ,GACV5H,EAAO6H,WAAU7H,EAAO6H,SAAW,IACjC7H,2ECHR,MAAM,EAA+BnP,OAAc,qCCAnD,MAAM,EAA+BA,OAAkB,+6BCOjDiX,EAAAA,SAAAA,2rBAEF,WAAYC,GAAO,wHACTA,sCAGV,WAEI,OACI,4BACItR,MAAO,CACHuR,OAAQvW,KAAKsW,MAAMtQ,YAAc,UAAY,WAEjDwQ,SAAUxW,KAAKsW,MAAME,SACrBC,UAAWzW,KAAKsW,MAAMI,SAAW,gCACjCC,QAAS3W,KAAKsW,MAAMK,SACnB3W,KAAKsW,MAAMM,iFAhBtBP,CAAeQ,EAAAA,WAuBrBR,EAAOS,UAAY,CAIfF,KAAMG,IAAAA,OAINL,SAAUK,IAAAA,OAIVJ,QAASI,IAAAA,KAKTP,SAAUO,IAAAA,KAKV/Q,YAAa+Q,IAAAA,MAGjBV,EAAOW,aAAe,CAClBJ,KAAM,GACNF,SAAU,oBACVC,QAAS,aACTH,UAAU,EACVxQ,aAAa,GAIjB,k6BCxDMiR,EAAAA,SAAAA,2rBAEF,WAAYX,GAAO,wHACTA,sCAGV,WACI,OACI,yBAAKG,UAAU,WACXzR,MAAO,CACHkS,QAASlX,KAAKsW,MAAMtQ,YAAc,OAAS,OAC3CmR,UAAW,SACXC,UAAW,OACXC,aAAc,SAMlB,yBAAKZ,UAAU,0DACXzR,MAAO,CACHG,MAAOnF,KAAKsW,MAAMgB,YAAc,IAChClS,OAAQ,SAGZ,0BAAMqR,UAAU,+BACZzR,MAAO,CACHuS,MAAO,UAEbvX,KAAKsW,MAAMgB,YAAYE,QAAQ,GAAK,kFA7BpDP,CAAoBJ,EAAAA,WAsC1BI,EAAYH,UAAY,CAIpBQ,YAAaP,IAAAA,OAIb/Q,YAAa+Q,IAAAA,MAGjBE,EAAYD,aAAe,CACvBM,YAAa,EACbtR,aAAa,GAIjB,kICpDImM,EAAU,ogCCUd,SAASsF,EAAaC,GAElB,OAAOA,EAAa,QDVxBvF,EAAQmC,kBAAoB,IAC5BnC,EAAQ+B,cAAgB,IAElB/B,EAAQuB,OAAS,SAAc,KAAM,QAE3CvB,EAAQa,OAAS,IACjBb,EAAQkC,mBAAqB,IAEhB,IAAI,IAASlC,GAKJ,KAAW,YAAiB,eCI7BwF,EAAAA,SAAAA,2rBAcjB,WAAYrB,GAAO,mHACf,cAAMA,IAuGVsB,uBAAyB,SAACzV,GACtB,GAA4B,MAAxB,EAAKmU,MAAMuB,UAEX,OAAO,EAEX,IAA+B,GAA3B1V,EAAKkB,KAAK5C,QAAQ,KAAY,CAC9B,IAAMqX,EAAY3V,EAAKkB,KAAKkH,MAAM,KAAKwN,MACvC,OAAO,EAAKzB,MAAMuB,UAAUG,SAASF,GAGrC,OAAO,EAAKxB,MAAMuB,UAAUG,SAAS,KAlH1B,EAsHnBC,8BAAgC,SAACC,GAI7B,GAHI,EAAKC,OACL1J,QAAQ2J,IAAI,sCAEa9Y,IAAxB,EAAKgX,MAAM+B,UAA4BH,EAAUxW,OAAS,EAAK4U,MAAM+B,SAEtE,OADAC,MAAM,6EAA+E,EAAKhC,MAAM+B,SAAS9H,WAAa,MAC/G,EAEX,QAAgCjR,IAA5B,EAAKgX,MAAMiC,aAA4B,CACvC,IAAIC,EAAa,EAIjB,GAHA,EAAKC,KAAK9W,MAAM+W,SAAQ,SAAUvW,GAC9BqW,GAAcrW,EAAKmB,OADvB,MAGIkV,EAAa,EAAKlC,MAAMiC,aAExB,OADAD,MAAM,kCAAoCb,EAAae,GAAYhB,QAAQ,GAAK,0BAA4BC,EAAa,EAAKnB,MAAMiC,cAAcf,QAAQ,GAAK,QACxJ,EAGf,OAAO,GAxIQ,EA2InBmB,WAAa,WAET,IAAIC,EAAkBnB,EAAa,EAAKgB,KAAK/Q,gBAAiB8P,QAAQ,GAChE,MACFqB,EAAc,GAEd,EAAKvC,MAAMwC,gBAAkB,EAC7BF,GAAkB,WAAa,EAAKtC,MAAMyC,kBAAkBrX,OAAS,GAAG6O,WAClE,IAAM,EAAK+F,MAAMwC,gBAAgBvI,WAEvCsI,EAAc,EAAKJ,KAAK9W,MAAM,GAAG0B,KAAO,IAE5C,EAAK2V,SAAS,CACVC,cAAe,aAAeJ,EAAc,IAAMD,EAAiB,IACnEtB,YAAoC,IAAvB,EAAKmB,KAAK5R,cAzJZ,EAgKnBqS,WAAa,WAEL,EAAKf,OACL1J,QAAQ2J,IAAI,cAGhB,EAAKe,MAAMC,cAAcV,SAAQ,SAAUvW,GACvCnC,KAAKyY,KAAKlR,WAAWpF,KADzB,MAIA,EAAK6W,SAAS,CACVhT,aAAa,EACbqT,oBAAoB,EAGpBJ,cAAe,KAGnBpJ,YAAW,WACP,EAAKmJ,SAAS,CAAE1B,YAAa,MAC9B,MApLY,EAyLnBgC,uBAAyB,WACrB,KAAO,EAAKb,KAAK9W,MAAMD,OAAS,GAC5B,EAAK+W,KAAKlR,WAAW,EAAKkR,KAAK9W,MAAM,KA3L1B,EA+LnB4X,YAAc,SAACpX,EAAM6G,EAAShF,GAItB,EAAKmU,OACL1J,QAAQ2J,IAAI,eAAgBjW,EAAM6G,EAAShF,GAG/C7B,EAAKiB,SAAW4F,EAChB,IAAMoQ,EAAgB,EAAKD,MAAMC,cACjCA,EAAcjZ,KAAKgC,GAEnB,IAAM4W,EAAoB,EAAKzC,MAAMyC,kBACrCA,EAAkB5Y,KAAKgC,EAAKiB,UAExB,EAAKkT,MAAMkD,UACX,EAAKlD,MAAMkD,SAAS,CAChBC,oBAAqB,EAAKnD,MAAMmD,oBAAsB,EACtDV,kBAAmBA,EACnBW,kBAAmBjC,EAAa,EAAKgB,KAAK/Q,gBAC1CiS,eAAgBlC,EAAa,EAAKgB,KAAKhR,aAG/C,EAAKuR,SAAS,CACVI,cAAeA,EACfH,cAAe,EAAK3C,MAAMsD,iBAAmBzX,EAAKiB,WAGtD,EAAKkT,MAAMkD,SAAS,CAChB5C,KAAM,EAAKN,MAAMsD,iBAAmBzX,EAAKiB,YA5N9B,EAiOnBT,UAAY,SAACR,EAAM6G,GACX,EAAKmP,OACL1J,QAAQ2J,IAAI,YAAajW,EAAM6G,GAE/B,EAAKmP,OACL1J,QAAQ2J,IAAI,0CAA2CjW,EAAM6G,GAEjEsP,MAAM,oDAAsDnW,EAAKM,aAAe,iBAAmBuG,GACnG,EAAK6Q,gBAzOU,EAmPnBC,oCAAsC,WAClC,IAAIC,EAAuB,EAErBC,EAAmB,GACzB,EAAKvB,KAAK9W,MAAM+W,SAAQ,SAAUvW,GAC1BnC,KAAKmY,OACL1J,QAAQ2J,IAAI,6BAA8BjW,GAEzCnC,KAAK4X,uBAAuBzV,KACzBnC,KAAKmY,OACL1J,QAAQ2J,IAAI,6CAA8CjW,GAE9D6X,EAAiB7Z,KAAKgC,GACtB4X,GAAwB,KAThC,MAaAC,EAAiBtB,SAAQ,SAAUvW,GAC/BnC,KAAKyY,KAAKlR,WAAWpF,KADzB,MAK4B,GAAxB4X,EACAzB,MAAM,iIAAmI,EAAKhC,MAAMuB,UAAUtM,KAAK,MAAQ,KACpKwO,EAAuB,GAC9BzB,MAAMyB,EAAqBxJ,WAAa,qIAAuI,EAAK+F,MAAMuB,UAAUtM,KAAK,MAAQ,MA5QtM,EAgRnB0O,6BAA+B,WAC3B,IAAIC,EAAoB,EAElBF,EAAmB,GACzB,EAAKvB,KAAK9W,MAAM+W,SAAQ,SAAUvW,GAC1BA,EAAKmB,KAAOtD,KAAKsW,MAAM6D,cACnBna,KAAKmY,OACL1J,QAAQ2J,IAAI,mCAAoCjW,GAEpD6X,EAAiB7Z,KAAKgC,GACtB+X,GAAqB,KAN7B,MAUAF,EAAiBtB,SAAQ,SAAUvW,GAC/BnC,KAAKyY,KAAKlR,WAAWpF,KADzB,MAIyB,GAArB+X,EACA5B,MAAM,oFAAsFb,EAAa,EAAKnB,MAAM6D,aAAa3C,QAAQ,GAAK,MACvI0C,EAAoB,GAC3B5B,MAAM4B,EAAkB3J,WAAa,yFAA2FkH,EAAa,EAAKnB,MAAM6D,aAAa3C,QAAQ,GAAK,OArSvK,EAySnB4C,iBAAmB,SAACzY,GACZ,EAAKwW,OACL1J,QAAQ2J,IAAI,mBAAoBzW,EAAMD,OAAQC,GAGlD,EAAKmY,sCACL,EAAKG,+BACQ,EAAKhC,8BAA8B,EAAKQ,KAAK9W,QAM1D,EAAK2U,MAAMkD,SAAS,CAChBC,oBAAqB,EACrBV,kBAAmB,GACnBD,gBAAiB,EAAKL,KAAK9W,MAAMD,OACjCgY,kBAAmB,EACnBC,eAAgB,IAEpB,EAAKX,SAAS,CAAEK,oBAAoB,IACpC,EAAKZ,KAAKnS,SACV,EAAK0S,SAAS,CAAEhT,aAAa,KAbzB,EAAKsT,0BAlTM,EAqWnBe,SAAW,WAEP,IAAIzD,EAAO,EAAKN,MAAMM,KAAO,EAAKN,MAAMM,KAAO,KAE/C,OAAO,2BACH5R,MAAO,CACHkS,QAAS,EAAKiC,MAAMnT,YAAc,QAAU,eAC5CsU,cAAe,SACfC,WAAY,SACZpV,MAAO,EAAKgU,MAAMnT,YAAc,OAAS,OACzCwU,aAAc,EAAKrB,MAAMnT,YAAc,OAAS,IAChDmR,UAAW,SACXsD,SAAU,aACVlE,OAAQ,EAAK4C,MAAMnT,YAAc,UAAY,UAC7C0U,SAAU,EAAKvB,MAAMnT,YAAc,OAAS,WAEhD2U,aAAc,EAAKC,cACnBC,aAAc,EAAKD,cACnBnE,UAAU,uBAEqB,KAA7B,EAAK0C,MAAMF,cAAwBrC,EAAO,EAAKuC,MAAMF,cACvD,2BACI6B,IAAK,SAAAC,GAAI,OAAI,EAAKC,SAAWD,GAC7BnW,KAAK,OACL6R,UAAU,MACVpT,KAAM,EAAKiT,MAAMlG,GAAK,UACtB6K,OAAQ,EAAK3E,MAAMuB,UAAa,EAAKvB,MAAMuB,UAAUrH,KAAI,SAAA0K,GAAG,MAAK,IAAMA,KAAM3P,KAAK,KAAQ,IAC1FiL,SAAU,EAAK2C,MAAMnT,aAAe,EAAKsQ,MAAME,SAC/CxR,MAAO,CACH,QAAW,IACX,MAAS,IACT,OAAU,IACV,SAAY,WACZ,SAAY,SACZ,OAAU,UArYtB,EAAKmU,MAAQxB,EAAsBwD,aACnC,EAAKP,cAAgB,EAAKA,cAAc7K,KAAnB,MACrB,EAAK8J,aAAe,EAAKA,aAAa9J,KAAlB,MACpB,EAAKqL,YAAc,EAAKA,YAAYrL,KAAjB,MACnB,EAAKsL,YAAc,EAAKA,YAAYtL,KAAjB,MACnB,EAAKuL,aAAe,EAAKA,aAAavL,KAAlB,MACpB,EAAK0I,KAAO,KAGZ,EAAKN,OAAQ,EAXE,2CAcnB,WACInY,KAAKgZ,SAASrB,EAAsBwD,+CAGxC,WAII,IAAMI,EAAgB,IAAI7b,IAAJ,CAAS,CAE3BgG,OAAQ1F,KAAKsW,MAAMkF,QAEnB9N,MAAO,CAAE+N,UAAWzb,KAAKsW,MAAMmF,WAE/B9R,UAAW3J,KAAKsW,MAAM3M,UAEtBtD,oBAAqBrG,KAAKsW,MAAMjQ,oBAGhC+H,QAAS,GAITjH,uBAAuB,EAIvBmF,YAAY,IAKhBiP,EAAcnX,aAAapE,KAAKgb,WAGM,IAAlChb,KAAKsW,MAAMoF,qBAAwD,IAAxB1b,KAAKsW,MAAME,UACtD+E,EAAc5V,WAAW3F,KAAK2b,UAyBlCJ,EAAc3b,GAAG,iBAAkBI,KAAKoa,kBAMxCmB,EAAc3b,GAAG,cAAeI,KAAKuZ,aAGrCgC,EAAc3b,GAAG,WAAYI,KAAK2Y,YAClC4C,EAAc3b,GAAG,WAAYI,KAAKkZ,YAClCqC,EAAc3b,GAAG,YAAaI,KAAK2C,WAEnC3C,KAAKyY,KAAO8C,oCAGhB,SAAmBK,GACf,IAAMC,GAAmD,IAAjCD,EAAUF,qBAAuD,IAAvBE,EAAUpF,SACtEsF,GAAmD,IAAlC9b,KAAKsW,MAAMoF,qBAAwD,IAAxB1b,KAAKsW,MAAME,SAEzEsF,IAAkBD,IACdC,EACA9b,KAAKyY,KAAK9S,WAAW3F,KAAK2b,UAE1B3b,KAAKyY,KAAK3S,aAAa9F,KAAK2b,uCAgOxC,WACI3b,KAAKyY,KAAK9R,SACV3G,KAAK+b,eACL/b,KAAKgZ,SAAS,CAAEhT,aAAa,+BAGjC,WACShG,KAAKmZ,MAAM6C,UAIZhc,KAAKyY,KAAKhS,SACVzG,KAAKgZ,SAAS,CAAEgD,UAAU,MAJ1Bhc,KAAKyY,KAAK/R,QACV1G,KAAKgZ,SAAS,CAAEgD,UAAU,gCAOlC,WACIhc,KAAKgZ,SAAS,CAAEgD,UAAU,EAAOhW,aAAa,EAAMqT,oBAAoB,iCAG5E,WACIrZ,KAAKgZ,SAAS,CACViD,WAAYjc,KAAKmZ,MAAM8C,wCAI/B,SAAatF,EAASC,EAAMsF,EAAsB1F,EAAUE,GACxD,OAAI1W,KAAKmZ,MAAME,oBAAsB6C,EAC1B,kBAAC,EAAD,CAAQtF,KAAMsF,GAAwBtF,EAAMF,SAAUA,EAAUC,QAASA,EAASH,SAAUA,EAAUxQ,YAAahG,KAAKmZ,MAAMnT,cAE9H,2BA4Cf,WAAS,IAwCGmW,EACEC,EAzCL,OAEDC,EAAcrc,KAAKsb,aACnBtb,KAAKqb,YACL,SACArb,KAAKsW,MAAM+F,YACXrc,KAAKmZ,MAAMnT,YACX,kDAGAsW,EAAetc,KAAKsb,aACpBtb,KAAK6Z,aACL,SACA7Z,KAAKsW,MAAMgG,cACVtc,KAAKmZ,MAAMnT,YACZ,mDAGAuW,EAAcvc,KAAKsb,aACnBtb,KAAKob,YACJpb,KAAKmZ,MAAM6C,SAAW,SAAW,QAClChc,KAAKsW,MAAMiG,aACVvc,KAAKmZ,MAAMnT,YACZ,gDAoCJ,OACI,yBAAKhB,MAhCD,EAAKmU,MAAMnT,YACJ,EAAKsQ,MAAMkG,eACX,EAAKlG,MAAME,SACX,EAAKF,MAAMmG,cACX,EAAKtD,MAAMjV,WACX,EAAKoS,MAAMoG,cAEf,EAAKpG,MAAMqG,aAyBMvM,GAAIpQ,KAAKsW,MAAMlG,GAAIqG,WApBvC0F,EAAY,CAAC,EAAK7F,MAAMG,WACtB2F,EAAU,CACZpW,YAAa,EAAKsQ,MAAMsG,eACxBZ,SAAU,EAAK1F,MAAMuG,YACrBZ,UAAW,EAAK3F,MAAMwG,aACtB5Y,WAAY,EAAKoS,MAAMyG,eAG3BrH,OAAO3T,QAAQqa,GAAS1D,SAAQ,YAAgC,+0BAA9BsE,EAA8B,KAAfvG,EAAe,KAC5D,EAAK0C,MAAM6D,IAAkBb,EAAUhc,KAAKsW,MAGhD,EAAKH,MAAME,UAAY2F,EAAUhc,KAAK,EAAKmW,MAAM2G,eAE1Cd,EAAU5Q,KAAK,MAM4CuP,IAAK,SAAAC,GAAI,OAAI,EAAKY,SAAWZ,IAC3F,yBAAK3K,GAAIpQ,KAAKsW,MAAMlG,GAAK,WACrBpL,MAAO,CACHkY,QAAS,SAEZld,KAAKqa,WACN,kBAAC,EAAD,CAAarU,YAAahG,KAAKmZ,MAAMnT,YAAasR,YAAatX,KAAKmZ,MAAM7B,cAC1E,yBAAKb,UAAU,kCACV6F,EACAC,EACAF,gFAjeJ1E,CAA8Bd,EAAAA,WAA9Bc,EAEVwD,aAAe,CAClB7D,YAAa,EACb2B,cAAe,GACfG,cAAe,GACf4C,UAAU,EACVhW,aAAa,EACbiW,WAAW,EACX/X,YAAY,EACZmV,oBAAoB,EACpB8D,YAAa,IA8drBxF,EAAsBb,UAAY,CAM9B0C,SAAUzC,IAAAA,KAMVsB,SAAUtB,IAAAA,OAKVoD,YAAapD,IAAAA,OAKbwB,aAAcxB,IAAAA,OAKdpN,UAAWoN,IAAAA,OAKX1Q,oBAAqB0Q,IAAAA,OAKrByE,QAASzE,IAAAA,OAKTN,UAAWM,IAAAA,OAKX+F,aAAc/F,IAAAA,OAKdkG,cAAelG,IAAAA,OAKf8F,YAAa9F,IAAAA,OAKbqG,eAAgBrG,IAAAA,OAKhB6F,eAAgB7F,IAAAA,OAKhB4F,aAAc5F,IAAAA,OAKd0F,cAAe1F,IAAAA,OAKfyF,eAAgBzF,IAAAA,OAKhB2F,cAAe3F,IAAAA,OAKfH,KAAMG,IAAAA,OAKNsG,gBAAiBtG,IAAAA,OAKjB6C,iBAAkB7C,IAAAA,OAKlBgC,kBAAmBhC,IAAAA,QAAkBA,IAAAA,QAKrCc,UAAWd,IAAAA,QAAkBA,IAAAA,QAK7BsF,YAAatF,IAAAA,KAKbwF,YAAaxF,IAAAA,KAKbuF,aAAcvF,IAAAA,KAKdP,SAAUO,IAAAA,KAKV2E,mBAAoB3E,IAAAA,KAMpBuG,sBAAuBvG,IAAAA,KAKvB3G,GAAI2G,IAAAA,OASJ0C,oBAAqB1C,IAAAA,OAKrB0E,UAAW1E,IAAAA,OAMX+B,gBAAiB/B,IAAAA,OAKjB2C,kBAAmB3C,IAAAA,OAMnB4C,eAAgB5C,IAAAA,QAGpBY,EAAsBX,aAAe,CACjCqB,SAAU,EACV8B,YAAa,SACbxQ,UAAW,QACXtD,oBAAqB,EACrBmV,QAAS,qBACT/E,UAAW,wBACXqG,aAAc,wBACdM,eAAgB,0BAChBH,cAAe,yBACfJ,YAAa,uBACbD,eAAgB,0BAChBD,aAAc,GACdH,eAAgB,GAChBE,cAAe,GACf9F,KAAM,8BACNgD,iBAAkB,aAClBb,kBAAmB,GACnBlB,eAAWvY,EACX+c,aAAa,EACbE,aAAa,EACbD,cAAc,EACdZ,oBAAoB,EACpBtL,GAAI,2BACJkN,2BAAuBhe,EACvBma,oBAAqB,EACrBgC,UAAW","sources":["webpack://dash_uploader/./node_modules/@flowjs/flow.js/src/flow.js","webpack://dash_uploader/./src/lib/components/uploader.css","webpack://dash_uploader/./node_modules/css-loader/dist/runtime/api.js","webpack://dash_uploader/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://dash_uploader/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://dash_uploader/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://dash_uploader/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://dash_uploader/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://dash_uploader/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://dash_uploader/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://dash_uploader/webpack/bootstrap","webpack://dash_uploader/webpack/runtime/compat get default export","webpack://dash_uploader/webpack/runtime/define property getters","webpack://dash_uploader/webpack/runtime/hasOwnProperty shorthand","webpack://dash_uploader/webpack/runtime/make namespace object","webpack://dash_uploader/webpack/runtime/node module decorator","webpack://dash_uploader/external window \"React\"","webpack://dash_uploader/external window \"PropTypes\"","webpack://dash_uploader/./src/lib/components/Button.react.js","webpack://dash_uploader/./src/lib/components/ProgressBar.react.js","webpack://dash_uploader/./src/lib/components/uploader.css?0961","webpack://dash_uploader/./src/lib/components/Upload_ReactComponent.react.js"],"sourcesContent":["/**\n * @license MIT\n */\n(function(window, document, undefined) {'use strict';\n  if (!window || !document) {\n    console.warn('Flowjs needs window and document objects to work');\n    return;\n  }\n  // ie10+\n  var ie10plus = window.navigator.msPointerEnabled;\n  /**\n   * Flow.js is a library providing multiple simultaneous, stable and\n   * resumable uploads via the HTML5 File API.\n   * @param [opts]\n   * @param {number|Function} [opts.chunkSize]\n   * @param {bool} [opts.forceChunkSize]\n   * @param {number} [opts.simultaneousUploads]\n   * @param {bool} [opts.singleFile]\n   * @param {string} [opts.fileParameterName]\n   * @param {number} [opts.progressCallbacksInterval]\n   * @param {number} [opts.speedSmoothingFactor]\n   * @param {Object|Function} [opts.query]\n   * @param {Object|Function} [opts.headers]\n   * @param {bool} [opts.withCredentials]\n   * @param {Function} [opts.preprocess]\n   * @param {string} [opts.method]\n   * @param {string|Function} [opts.testMethod]\n   * @param {string|Function} [opts.uploadMethod]\n   * @param {bool} [opts.prioritizeFirstAndLastChunk]\n   * @param {bool} [opts.allowDuplicateUploads]\n   * @param {string|Function} [opts.target]\n   * @param {number} [opts.maxChunkRetries]\n   * @param {number} [opts.chunkRetryInterval]\n   * @param {Array.<number>} [opts.permanentErrors]\n   * @param {Array.<number>} [opts.successStatuses]\n   * @param {Function} [opts.initFileFn]\n   * @param {Function} [opts.readFileFn]\n   * @param {Function} [opts.generateUniqueIdentifier]\n   * @constructor\n   */\n  function Flow(opts) {\n    /**\n     * Supported by browser?\n     * @type {boolean}\n     */\n    this.support = (\n        typeof File !== 'undefined' &&\n        typeof Blob !== 'undefined' &&\n        typeof FileList !== 'undefined' &&\n        (\n          !!Blob.prototype.slice || !!Blob.prototype.webkitSlice || !!Blob.prototype.mozSlice ||\n          false\n        ) // slicing files support\n    );\n\n    if (!this.support) {\n      return ;\n    }\n\n    /**\n     * Check if directory upload is supported\n     * @type {boolean}\n     */\n    this.supportDirectory = (\n        /Chrome/.test(window.navigator.userAgent) ||\n        /Firefox/.test(window.navigator.userAgent) ||\n        /Edge/.test(window.navigator.userAgent)\n    );\n\n    /**\n     * List of FlowFile objects\n     * @type {Array.<FlowFile>}\n     */\n    this.files = [];\n\n    /**\n     * Default options for flow.js\n     * @type {Object}\n     */\n    this.defaults = {\n      chunkSize: 1024 * 1024,\n      forceChunkSize: false,\n      simultaneousUploads: 3,\n      singleFile: false,\n      fileParameterName: 'file',\n      progressCallbacksInterval: 500,\n      speedSmoothingFactor: 0.1,\n      query: {},\n      headers: {},\n      withCredentials: false,\n      preprocess: null,\n      changeRawDataBeforeSend: null,\n      method: 'multipart',\n      testMethod: 'GET',\n      uploadMethod: 'POST',\n      prioritizeFirstAndLastChunk: false,\n      allowDuplicateUploads: false,\n      target: '/',\n      testChunks: true,\n      generateUniqueIdentifier: null,\n      maxChunkRetries: 0,\n      chunkRetryInterval: null,\n      permanentErrors: [404, 413, 415, 500, 501],\n      successStatuses: [200, 201, 202],\n      onDropStopPropagation: false,\n      initFileFn: null,\n      readFileFn: webAPIFileRead\n    };\n\n    /**\n     * Current options\n     * @type {Object}\n     */\n    this.opts = {};\n\n    /**\n     * List of events:\n     *  key stands for event name\n     *  value array list of callbacks\n     * @type {}\n     */\n    this.events = {};\n\n    var $ = this;\n\n    /**\n     * On drop event\n     * @function\n     * @param {MouseEvent} event\n     */\n    this.onDrop = function (event) {\n      if ($.opts.onDropStopPropagation) {\n        event.stopPropagation();\n      }\n      event.preventDefault();\n      var dataTransfer = event.dataTransfer;\n      if (dataTransfer.items && dataTransfer.items[0] &&\n        dataTransfer.items[0].webkitGetAsEntry) {\n        $.webkitReadDataTransfer(event);\n      } else {\n        $.addFiles(dataTransfer.files, event);\n      }\n    };\n\n    /**\n     * Prevent default\n     * @function\n     * @param {MouseEvent} event\n     */\n    this.preventEvent = function (event) {\n      event.preventDefault();\n    };\n\n\n    /**\n     * Current options\n     * @type {Object}\n     */\n    this.opts = Flow.extend({}, this.defaults, opts || {});\n\n  }\n\n  Flow.prototype = {\n    /**\n     * Set a callback for an event, possible events:\n     * fileSuccess(file), fileProgress(file), fileAdded(file, event),\n     * fileRemoved(file), fileRetry(file), fileError(file, message),\n     * complete(), progress(), error(message, file), pause()\n     * @function\n     * @param {string} event\n     * @param {Function} callback\n     */\n    on: function (event, callback) {\n      event = event.toLowerCase();\n      if (!this.events.hasOwnProperty(event)) {\n        this.events[event] = [];\n      }\n      this.events[event].push(callback);\n    },\n\n    /**\n     * Remove event callback\n     * @function\n     * @param {string} [event] removes all events if not specified\n     * @param {Function} [fn] removes all callbacks of event if not specified\n     */\n    off: function (event, fn) {\n      if (event !== undefined) {\n        event = event.toLowerCase();\n        if (fn !== undefined) {\n          if (this.events.hasOwnProperty(event)) {\n            arrayRemove(this.events[event], fn);\n          }\n        } else {\n          delete this.events[event];\n        }\n      } else {\n        this.events = {};\n      }\n    },\n\n    /**\n     * Fire an event\n     * @function\n     * @param {string} event event name\n     * @param {...} args arguments of a callback\n     * @return {bool} value is false if at least one of the event handlers which handled this event\n     * returned false. Otherwise it returns true.\n     */\n    fire: function (event, args) {\n      // `arguments` is an object, not array, in FF, so:\n      args = Array.prototype.slice.call(arguments);\n      event = event.toLowerCase();\n      var preventDefault = false;\n      if (this.events.hasOwnProperty(event)) {\n        each(this.events[event], function (callback) {\n          preventDefault = callback.apply(this, args.slice(1)) === false || preventDefault;\n        }, this);\n      }\n      if (event != 'catchall') {\n        args.unshift('catchAll');\n        preventDefault = this.fire.apply(this, args) === false || preventDefault;\n      }\n      return !preventDefault;\n    },\n\n    /**\n     * Read webkit dataTransfer object\n     * @param event\n     */\n    webkitReadDataTransfer: function (event) {\n      var $ = this;\n      var queue = event.dataTransfer.items.length;\n      var files = [];\n      each(event.dataTransfer.items, function (item) {\n        var entry = item.webkitGetAsEntry();\n        if (!entry) {\n          decrement();\n          return ;\n        }\n        if (entry.isFile) {\n          // due to a bug in Chrome's File System API impl - #149735\n          fileReadSuccess(item.getAsFile(), entry.fullPath);\n        } else {\n          readDirectory(entry.createReader());\n        }\n      });\n      function readDirectory(reader) {\n        reader.readEntries(function (entries) {\n          if (entries.length) {\n            queue += entries.length;\n            each(entries, function(entry) {\n              if (entry.isFile) {\n                var fullPath = entry.fullPath;\n                entry.file(function (file) {\n                  fileReadSuccess(file, fullPath);\n                }, readError);\n              } else if (entry.isDirectory) {\n                readDirectory(entry.createReader());\n              }\n            });\n            readDirectory(reader);\n          } else {\n            decrement();\n          }\n        }, readError);\n      }\n      function fileReadSuccess(file, fullPath) {\n        // relative path should not start with \"/\"\n        file.relativePath = fullPath.substring(1);\n        files.push(file);\n        decrement();\n      }\n      function readError(fileError) {\n        decrement();\n        throw fileError;\n      }\n      function decrement() {\n        if (--queue == 0) {\n          $.addFiles(files, event);\n        }\n      }\n    },\n\n    /**\n     * Generate unique identifier for a file\n     * @function\n     * @param {FlowFile} file\n     * @returns {string}\n     */\n    generateUniqueIdentifier: function (file) {\n      var custom = this.opts.generateUniqueIdentifier;\n      if (typeof custom === 'function') {\n        return custom(file);\n      }\n      // Some confusion in different versions of Firefox\n      var relativePath = file.relativePath || file.webkitRelativePath || file.fileName || file.name;\n      return file.size + '-' + relativePath.replace(/[^0-9a-zA-Z_-]/img, '');\n    },\n\n    /**\n     * Upload next chunk from the queue\n     * @function\n     * @returns {boolean}\n     * @private\n     */\n    uploadNextChunk: function (preventEvents) {\n      // In some cases (such as videos) it's really handy to upload the first\n      // and last chunk of a file quickly; this let's the server check the file's\n      // metadata and determine if there's even a point in continuing.\n      var found = false;\n      if (this.opts.prioritizeFirstAndLastChunk) {\n        each(this.files, function (file) {\n          if (!file.paused && file.chunks.length &&\n            file.chunks[0].status() === 'pending') {\n            file.chunks[0].send();\n            found = true;\n            return false;\n          }\n          if (!file.paused && file.chunks.length > 1 &&\n            file.chunks[file.chunks.length - 1].status() === 'pending') {\n            file.chunks[file.chunks.length - 1].send();\n            found = true;\n            return false;\n          }\n        });\n        if (found) {\n          return found;\n        }\n      }\n\n      // Now, simply look for the next, best thing to upload\n      each(this.files, function (file) {\n        if (!file.paused) {\n          each(file.chunks, function (chunk) {\n            if (chunk.status() === 'pending') {\n              chunk.send();\n              found = true;\n              return false;\n            }\n          });\n        }\n        if (found) {\n          return false;\n        }\n      });\n      if (found) {\n        return true;\n      }\n\n      // The are no more outstanding chunks to upload, check is everything is done\n      var outstanding = false;\n      each(this.files, function (file) {\n        if (!file.isComplete()) {\n          outstanding = true;\n          return false;\n        }\n      });\n      if (!outstanding && !preventEvents) {\n        // All chunks have been uploaded, complete\n        async(function () {\n          this.fire('complete');\n        }, this);\n      }\n      return false;\n    },\n\n\n    /**\n     * Assign a browse action to one or more DOM nodes.\n     * @function\n     * @param {Element|Array.<Element>} domNodes\n     * @param {boolean} isDirectory Pass in true to allow directories to\n     * @param {boolean} singleFile prevent multi file upload\n     * @param {Object} attributes set custom attributes:\n     *  http://www.w3.org/TR/html-markup/input.file.html#input.file-attributes\n     *  eg: accept: 'image/*'\n     * be selected (Chrome only).\n     */\n    assignBrowse: function (domNodes, isDirectory, singleFile, attributes) {\n      if (domNodes instanceof Element) {\n        domNodes = [domNodes];\n      }\n\n      each(domNodes, function (domNode) {\n        var input;\n        if (domNode.tagName === 'INPUT' && domNode.type === 'file') {\n          input = domNode;\n        } else {\n          input = document.createElement('input');\n          input.setAttribute('type', 'file');\n          // display:none - not working in opera 12\n          extend(input.style, {\n            visibility: 'hidden',\n            position: 'absolute',\n            width: '1px',\n            height: '1px'\n          });\n          // for opera 12 browser, input must be assigned to a document\n          domNode.appendChild(input);\n          // https://developer.mozilla.org/en/using_files_from_web_applications)\n          // event listener is executed two times\n          // first one - original mouse click event\n          // second - input.click(), input is inside domNode\n          domNode.addEventListener('click', function() {\n            input.click();\n          }, false);\n        }\n        if (!this.opts.singleFile && !singleFile) {\n          input.setAttribute('multiple', 'multiple');\n        }\n        if (isDirectory) {\n          input.setAttribute('webkitdirectory', 'webkitdirectory');\n        }\n        each(attributes, function (value, key) {\n          input.setAttribute(key, value);\n        });\n        // When new files are added, simply append them to the overall list\n        var $ = this;\n        input.addEventListener('change', function (e) {\n       \t  if (e.target.value) {\n            $.addFiles(e.target.files, e);\n            e.target.value = '';\n       \t  }\n        }, false);\n      }, this);\n    },\n\n    /**\n     * Assign one or more DOM nodes as a drop target.\n     * @function\n     * @param {Element|Array.<Element>} domNodes\n     */\n    assignDrop: function (domNodes) {\n      if (typeof domNodes.length === 'undefined') {\n        domNodes = [domNodes];\n      }\n      each(domNodes, function (domNode) {\n        domNode.addEventListener('dragover', this.preventEvent, false);\n        domNode.addEventListener('dragenter', this.preventEvent, false);\n        domNode.addEventListener('drop', this.onDrop, false);\n      }, this);\n    },\n\n    /**\n     * Un-assign drop event from DOM nodes\n     * @function\n     * @param domNodes\n     */\n    unAssignDrop: function (domNodes) {\n      if (typeof domNodes.length === 'undefined') {\n        domNodes = [domNodes];\n      }\n      each(domNodes, function (domNode) {\n        domNode.removeEventListener('dragover', this.preventEvent);\n        domNode.removeEventListener('dragenter', this.preventEvent);\n        domNode.removeEventListener('drop', this.onDrop);\n      }, this);\n    },\n\n    /**\n     * Returns a boolean indicating whether or not the instance is currently\n     * uploading anything.\n     * @function\n     * @returns {boolean}\n     */\n    isUploading: function () {\n      var uploading = false;\n      each(this.files, function (file) {\n        if (file.isUploading()) {\n          uploading = true;\n          return false;\n        }\n      });\n      return uploading;\n    },\n\n    /**\n     * should upload next chunk\n     * @function\n     * @returns {boolean|number}\n     */\n    _shouldUploadNext: function () {\n      var num = 0;\n      var should = true;\n      var simultaneousUploads = this.opts.simultaneousUploads;\n      each(this.files, function (file) {\n        each(file.chunks, function(chunk) {\n          if (chunk.status() === 'uploading') {\n            num++;\n            if (num >= simultaneousUploads) {\n              should = false;\n              return false;\n            }\n          }\n        });\n      });\n      // if should is true then return uploading chunks's length\n      return should && num;\n    },\n\n    /**\n     * Start or resume uploading.\n     * @function\n     */\n    upload: function () {\n      // Make sure we don't start too many uploads at once\n      var ret = this._shouldUploadNext();\n      if (ret === false) {\n        return;\n      }\n      // Kick off the queue\n      this.fire('uploadStart');\n      var started = false;\n      for (var num = 1; num <= this.opts.simultaneousUploads - ret; num++) {\n        started = this.uploadNextChunk(true) || started;\n      }\n      if (!started) {\n        async(function () {\n          this.fire('complete');\n        }, this);\n      }\n    },\n\n    /**\n     * Resume uploading.\n     * @function\n     */\n    resume: function () {\n      each(this.files, function (file) {\n        if (!file.isComplete()) {\n          file.resume();\n        }\n      });\n    },\n\n    /**\n     * Pause uploading.\n     * @function\n     */\n    pause: function () {\n      each(this.files, function (file) {\n        file.pause();\n      });\n    },\n\n    /**\n     * Cancel upload of all FlowFile objects and remove them from the list.\n     * @function\n     */\n    cancel: function () {\n      for (var i = this.files.length - 1; i >= 0; i--) {\n        this.files[i].cancel();\n      }\n    },\n\n    /**\n     * Returns a number between 0 and 1 indicating the current upload progress\n     * of all files.\n     * @function\n     * @returns {number}\n     */\n    progress: function () {\n      var totalDone = 0;\n      var totalSize = 0;\n      // Resume all chunks currently being uploaded\n      each(this.files, function (file) {\n        totalDone += file.progress() * file.size;\n        totalSize += file.size;\n      });\n      return totalSize > 0 ? totalDone / totalSize : 0;\n    },\n\n    /**\n     * Add a HTML5 File object to the list of files.\n     * @function\n     * @param {File} file\n     * @param {Event} [event] event is optional\n     */\n    addFile: function (file, event) {\n      this.addFiles([file], event);\n    },\n\n    /**\n     * Add a HTML5 File object to the list of files.\n     * @function\n     * @param {FileList|Array} fileList\n     * @param {Event} [event] event is optional\n     */\n    addFiles: function (fileList, event) {\n      var files = [];\n      each(fileList, function (file) {\n        // https://github.com/flowjs/flow.js/issues/55\n        if ((!ie10plus || ie10plus && file.size > 0) && !(file.size % 4096 === 0 && (file.name === '.' || file.fileName === '.'))) {\n          var uniqueIdentifier = this.generateUniqueIdentifier(file);\n          if (this.opts.allowDuplicateUploads || !this.getFromUniqueIdentifier(uniqueIdentifier)) {\n            var f = new FlowFile(this, file, uniqueIdentifier);\n            if (this.fire('fileAdded', f, event)) {\n              files.push(f);\n            }\n          }\n        }\n      }, this);\n      if (this.fire('filesAdded', files, event)) {\n        each(files, function (file) {\n          if (this.opts.singleFile && this.files.length > 0) {\n            this.removeFile(this.files[0]);\n          }\n          this.files.push(file);\n        }, this);\n        this.fire('filesSubmitted', files, event);\n      }\n    },\n\n\n    /**\n     * Cancel upload of a specific FlowFile object from the list.\n     * @function\n     * @param {FlowFile} file\n     */\n    removeFile: function (file) {\n      for (var i = this.files.length - 1; i >= 0; i--) {\n        if (this.files[i] === file) {\n          this.files.splice(i, 1);\n          file.abort();\n          this.fire('fileRemoved', file);\n        }\n      }\n    },\n\n    /**\n     * Look up a FlowFile object by its unique identifier.\n     * @function\n     * @param {string} uniqueIdentifier\n     * @returns {boolean|FlowFile} false if file was not found\n     */\n    getFromUniqueIdentifier: function (uniqueIdentifier) {\n      var ret = false;\n      each(this.files, function (file) {\n        if (file.uniqueIdentifier === uniqueIdentifier) {\n          ret = file;\n        }\n      });\n      return ret;\n    },\n\n    /**\n     * Returns the total size of all files in bytes.\n     * @function\n     * @returns {number}\n     */\n    getSize: function () {\n      var totalSize = 0;\n      each(this.files, function (file) {\n        totalSize += file.size;\n      });\n      return totalSize;\n    },\n\n    /**\n     * Returns the total size uploaded of all files in bytes.\n     * @function\n     * @returns {number}\n     */\n    sizeUploaded: function () {\n      var size = 0;\n      each(this.files, function (file) {\n        size += file.sizeUploaded();\n      });\n      return size;\n    },\n\n    /**\n     * Returns remaining time to upload all files in seconds. Accuracy is based on average speed.\n     * If speed is zero, time remaining will be equal to positive infinity `Number.POSITIVE_INFINITY`\n     * @function\n     * @returns {number}\n     */\n    timeRemaining: function () {\n      var sizeDelta = 0;\n      var averageSpeed = 0;\n      each(this.files, function (file) {\n        if (!file.paused && !file.error) {\n          sizeDelta += file.size - file.sizeUploaded();\n          averageSpeed += file.averageSpeed;\n        }\n      });\n      if (sizeDelta && !averageSpeed) {\n        return Number.POSITIVE_INFINITY;\n      }\n      if (!sizeDelta && !averageSpeed) {\n        return 0;\n      }\n      return Math.floor(sizeDelta / averageSpeed);\n    }\n  };\n\n\n\n\n\n\n  /**\n   * FlowFile class\n   * @name FlowFile\n   * @param {Flow} flowObj\n   * @param {File} file\n   * @param {string} uniqueIdentifier\n   * @constructor\n   */\n  function FlowFile(flowObj, file, uniqueIdentifier) {\n\n    /**\n     * Reference to parent Flow instance\n     * @type {Flow}\n     */\n    this.flowObj = flowObj;\n\n    /**\n     * Used to store the bytes read\n     * @type {Blob|string}\n     */\n    this.bytes = null;\n\n    /**\n     * Reference to file\n     * @type {File}\n     */\n    this.file = file;\n\n    /**\n     * File name. Some confusion in different versions of Firefox\n     * @type {string}\n     */\n    this.name = file.fileName || file.name;\n\n    /**\n     * File size\n     * @type {number}\n     */\n    this.size = file.size;\n\n    /**\n     * Relative file path\n     * @type {string}\n     */\n    this.relativePath = file.relativePath || file.webkitRelativePath || this.name;\n\n    /**\n     * File unique identifier\n     * @type {string}\n     */\n    this.uniqueIdentifier = (uniqueIdentifier === undefined ? flowObj.generateUniqueIdentifier(file) : uniqueIdentifier);\n\n    /**\n     * Size of Each Chunk\n     * @type {number}\n     */\n    this.chunkSize = 0;\n\n    /**\n     * List of chunks\n     * @type {Array.<FlowChunk>}\n     */\n    this.chunks = [];\n\n    /**\n     * Indicated if file is paused\n     * @type {boolean}\n     */\n    this.paused = false;\n\n    /**\n     * Indicated if file has encountered an error\n     * @type {boolean}\n     */\n    this.error = false;\n\n    /**\n     * Average upload speed\n     * @type {number}\n     */\n    this.averageSpeed = 0;\n\n    /**\n     * Current upload speed\n     * @type {number}\n     */\n    this.currentSpeed = 0;\n\n    /**\n     * Date then progress was called last time\n     * @type {number}\n     * @private\n     */\n    this._lastProgressCallback = Date.now();\n\n    /**\n     * Previously uploaded file size\n     * @type {number}\n     * @private\n     */\n    this._prevUploadedSize = 0;\n\n    /**\n     * Holds previous progress\n     * @type {number}\n     * @private\n     */\n    this._prevProgress = 0;\n\n    this.bootstrap();\n  }\n\n  FlowFile.prototype = {\n    /**\n     * Update speed parameters\n     * @link http://stackoverflow.com/questions/2779600/how-to-estimate-download-time-remaining-accurately\n     * @function\n     */\n    measureSpeed: function () {\n      var timeSpan = Date.now() - this._lastProgressCallback;\n      if (!timeSpan) {\n        return ;\n      }\n      var smoothingFactor = this.flowObj.opts.speedSmoothingFactor;\n      var uploaded = this.sizeUploaded();\n      // Prevent negative upload speed after file upload resume\n      this.currentSpeed = Math.max((uploaded - this._prevUploadedSize) / timeSpan * 1000, 0);\n      this.averageSpeed = smoothingFactor * this.currentSpeed + (1 - smoothingFactor) * this.averageSpeed;\n      this._prevUploadedSize = uploaded;\n    },\n\n    /**\n     * For internal usage only.\n     * Callback when something happens within the chunk.\n     * @function\n     * @param {FlowChunk} chunk\n     * @param {string} event can be 'progress', 'success', 'error' or 'retry'\n     * @param {string} [message]\n     */\n    chunkEvent: function (chunk, event, message) {\n      switch (event) {\n        case 'progress':\n          if (Date.now() - this._lastProgressCallback <\n            this.flowObj.opts.progressCallbacksInterval) {\n            break;\n          }\n          this.measureSpeed();\n          this.flowObj.fire('fileProgress', this, chunk);\n          this.flowObj.fire('progress');\n          this._lastProgressCallback = Date.now();\n          break;\n        case 'error':\n          this.error = true;\n          this.abort(true);\n          this.flowObj.fire('fileError', this, message, chunk);\n          this.flowObj.fire('error', message, this, chunk);\n          break;\n        case 'success':\n          if (this.error) {\n            return;\n          }\n          this.measureSpeed();\n          this.flowObj.fire('fileProgress', this, chunk);\n          this.flowObj.fire('progress');\n          this._lastProgressCallback = Date.now();\n          if (this.isComplete()) {\n            this.currentSpeed = 0;\n            this.averageSpeed = 0;\n            this.flowObj.fire('fileSuccess', this, message, chunk);\n          }\n          break;\n        case 'retry':\n          this.flowObj.fire('fileRetry', this, chunk);\n          break;\n      }\n    },\n\n    /**\n     * Pause file upload\n     * @function\n     */\n    pause: function() {\n      this.paused = true;\n      this.abort();\n    },\n\n    /**\n     * Resume file upload\n     * @function\n     */\n    resume: function() {\n      this.paused = false;\n      this.flowObj.upload();\n    },\n\n    /**\n     * Abort current upload\n     * @function\n     */\n    abort: function (reset) {\n      this.currentSpeed = 0;\n      this.averageSpeed = 0;\n      var chunks = this.chunks;\n      if (reset) {\n        this.chunks = [];\n      }\n      each(chunks, function (c) {\n        if (c.status() === 'uploading') {\n          c.abort();\n          this.flowObj.uploadNextChunk();\n        }\n      }, this);\n    },\n\n    /**\n     * Cancel current upload and remove from a list\n     * @function\n     */\n    cancel: function () {\n      this.flowObj.removeFile(this);\n    },\n\n    /**\n     * Retry aborted file upload\n     * @function\n     */\n    retry: function () {\n      this.bootstrap();\n      this.flowObj.upload();\n    },\n\n    /**\n     * Clear current chunks and slice file again\n     * @function\n     */\n    bootstrap: function () {\n      if (typeof this.flowObj.opts.initFileFn === \"function\") {\n        this.flowObj.opts.initFileFn(this);\n      }\n\n      this.abort(true);\n      this.error = false;\n      // Rebuild stack of chunks from file\n      this._prevProgress = 0;\n      var round = this.flowObj.opts.forceChunkSize ? Math.ceil : Math.floor;\n      this.chunkSize = evalOpts(this.flowObj.opts.chunkSize, this);\n      var chunks = Math.max(\n        round(this.size / this.chunkSize), 1\n      );\n      for (var offset = 0; offset < chunks; offset++) {\n        this.chunks.push(\n          new FlowChunk(this.flowObj, this, offset)\n        );\n      }\n    },\n\n    /**\n     * Get current upload progress status\n     * @function\n     * @returns {number} from 0 to 1\n     */\n    progress: function () {\n      if (this.error) {\n        return 1;\n      }\n      if (this.chunks.length === 1) {\n        this._prevProgress = Math.max(this._prevProgress, this.chunks[0].progress());\n        return this._prevProgress;\n      }\n      // Sum up progress across everything\n      var bytesLoaded = 0;\n      each(this.chunks, function (c) {\n        // get chunk progress relative to entire file\n        bytesLoaded += c.progress() * (c.endByte - c.startByte);\n      });\n      var percent = bytesLoaded / this.size;\n      // We don't want to lose percentages when an upload is paused\n      this._prevProgress = Math.max(this._prevProgress, percent > 0.9999 ? 1 : percent);\n      return this._prevProgress;\n    },\n\n    /**\n     * Indicates if file is being uploaded at the moment\n     * @function\n     * @returns {boolean}\n     */\n    isUploading: function () {\n      var uploading = false;\n      each(this.chunks, function (chunk) {\n        if (chunk.status() === 'uploading') {\n          uploading = true;\n          return false;\n        }\n      });\n      return uploading;\n    },\n\n    /**\n     * Indicates if file is has finished uploading and received a response\n     * @function\n     * @returns {boolean}\n     */\n    isComplete: function () {\n      var outstanding = false;\n      each(this.chunks, function (chunk) {\n        var status = chunk.status();\n        if (status === 'pending' || status === 'uploading' || status === 'reading' || chunk.preprocessState === 1 || chunk.readState === 1) {\n          outstanding = true;\n          return false;\n        }\n      });\n      return !outstanding;\n    },\n\n    /**\n     * Count total size uploaded\n     * @function\n     * @returns {number}\n     */\n    sizeUploaded: function () {\n      var size = 0;\n      each(this.chunks, function (chunk) {\n        size += chunk.sizeUploaded();\n      });\n      return size;\n    },\n\n    /**\n     * Returns remaining time to finish upload file in seconds. Accuracy is based on average speed.\n     * If speed is zero, time remaining will be equal to positive infinity `Number.POSITIVE_INFINITY`\n     * @function\n     * @returns {number}\n     */\n    timeRemaining: function () {\n      if (this.paused || this.error) {\n        return 0;\n      }\n      var delta = this.size - this.sizeUploaded();\n      if (delta && !this.averageSpeed) {\n        return Number.POSITIVE_INFINITY;\n      }\n      if (!delta && !this.averageSpeed) {\n        return 0;\n      }\n      return Math.floor(delta / this.averageSpeed);\n    },\n\n    /**\n     * Get file type\n     * @function\n     * @returns {string}\n     */\n    getType: function () {\n      return this.file.type && this.file.type.split('/')[1];\n    },\n\n    /**\n     * Get file extension\n     * @function\n     * @returns {string}\n     */\n    getExtension: function () {\n      return this.name.substr((~-this.name.lastIndexOf(\".\") >>> 0) + 2).toLowerCase();\n    }\n  };\n\n  /**\n   * Default read function using the webAPI\n   *\n   * @function webAPIFileRead(fileObj, startByte, endByte, fileType, chunk)\n   *\n   */\n  function webAPIFileRead(fileObj, startByte, endByte, fileType, chunk) {\n    var function_name = 'slice';\n\n    if (fileObj.file.slice)\n      function_name =  'slice';\n    else if (fileObj.file.mozSlice)\n      function_name = 'mozSlice';\n    else if (fileObj.file.webkitSlice)\n      function_name = 'webkitSlice';\n\n    chunk.readFinished(fileObj.file[function_name](startByte, endByte, fileType));\n  }\n\n\n  /**\n   * Class for storing a single chunk\n   * @name FlowChunk\n   * @param {Flow} flowObj\n   * @param {FlowFile} fileObj\n   * @param {number} offset\n   * @constructor\n   */\n  function FlowChunk(flowObj, fileObj, offset) {\n\n    /**\n     * Reference to parent flow object\n     * @type {Flow}\n     */\n    this.flowObj = flowObj;\n\n    /**\n     * Reference to parent FlowFile object\n     * @type {FlowFile}\n     */\n    this.fileObj = fileObj;\n\n    /**\n     * File offset\n     * @type {number}\n     */\n    this.offset = offset;\n\n    /**\n     * Indicates if chunk existence was checked on the server\n     * @type {boolean}\n     */\n    this.tested = false;\n\n    /**\n     * Number of retries performed\n     * @type {number}\n     */\n    this.retries = 0;\n\n    /**\n     * Pending retry\n     * @type {boolean}\n     */\n    this.pendingRetry = false;\n\n    /**\n     * Preprocess state\n     * @type {number} 0 = unprocessed, 1 = processing, 2 = finished\n     */\n    this.preprocessState = 0;\n\n    /**\n     * Read state\n     * @type {number} 0 = not read, 1 = reading, 2 = finished\n     */\n    this.readState = 0;\n\n\n    /**\n     * Bytes transferred from total request size\n     * @type {number}\n     */\n    this.loaded = 0;\n\n    /**\n     * Total request size\n     * @type {number}\n     */\n    this.total = 0;\n\n    /**\n     * Size of a chunk\n     * @type {number}\n     */\n    this.chunkSize = this.fileObj.chunkSize;\n\n    /**\n     * Chunk start byte in a file\n     * @type {number}\n     */\n    this.startByte = this.offset * this.chunkSize;\n\n    /**\n     * A specific filename for this chunk which otherwise default to the main name\n     * @type {string}\n     */\n    this.filename = null;\n\n    /**\n      * Compute the endbyte in a file\n      *\n      */\n    this.computeEndByte = function() {\n      var endByte = Math.min(this.fileObj.size, (this.offset + 1) * this.chunkSize);\n      if (this.fileObj.size - endByte < this.chunkSize && !this.flowObj.opts.forceChunkSize) {\n        // The last chunk will be bigger than the chunk size,\n        // but less than 2 * this.chunkSize\n        endByte = this.fileObj.size;\n      }\n      return endByte;\n    }\n\n    /**\n     * Chunk end byte in a file\n     * @type {number}\n     */\n    this.endByte = this.computeEndByte();\n\n    /**\n     * XMLHttpRequest\n     * @type {XMLHttpRequest}\n     */\n    this.xhr = null;\n\n    var $ = this;\n\n    /**\n     * Send chunk event\n     * @param event\n     * @param {...} args arguments of a callback\n     */\n    this.event = function (event, args) {\n      args = Array.prototype.slice.call(arguments);\n      args.unshift($);\n      $.fileObj.chunkEvent.apply($.fileObj, args);\n    };\n    /**\n     * Catch progress event\n     * @param {ProgressEvent} event\n     */\n    this.progressHandler = function(event) {\n      if (event.lengthComputable) {\n        $.loaded = event.loaded ;\n        $.total = event.total;\n      }\n      $.event('progress', event);\n    };\n\n    /**\n     * Catch test event\n     * @param {Event} event\n     */\n    this.testHandler = function(event) {\n      var status = $.status(true);\n      if (status === 'error') {\n        $.event(status, $.message());\n        $.flowObj.uploadNextChunk();\n      } else if (status === 'success') {\n        $.tested = true;\n        $.event(status, $.message());\n        $.flowObj.uploadNextChunk();\n      } else if (!$.fileObj.paused) {\n        // Error might be caused by file pause method\n        // Chunks does not exist on the server side\n        $.tested = true;\n        $.send();\n      }\n    };\n\n    /**\n     * Upload has stopped\n     * @param {Event} event\n     */\n    this.doneHandler = function(event) {\n      var status = $.status();\n      if (status === 'success' || status === 'error') {\n        delete this.data;\n        $.event(status, $.message());\n        $.flowObj.uploadNextChunk();\n      } else if (!$.fileObj.paused) {\n        $.event('retry', $.message());\n        $.pendingRetry = true;\n        $.abort();\n        $.retries++;\n        var retryInterval = $.flowObj.opts.chunkRetryInterval;\n        if (retryInterval !== null) {\n          setTimeout(function () {\n            $.send();\n          }, retryInterval);\n        } else {\n          $.send();\n        }\n      }\n    };\n  }\n\n  FlowChunk.prototype = {\n    /**\n     * Get params for a request\n     * @function\n     */\n    getParams: function () {\n      return {\n        flowChunkNumber: this.offset + 1,\n        flowChunkSize: this.chunkSize,\n        flowCurrentChunkSize: this.endByte - this.startByte,\n        flowTotalSize: this.fileObj.size,\n        flowIdentifier: this.fileObj.uniqueIdentifier,\n        flowFilename: this.fileObj.name,\n        flowRelativePath: this.fileObj.relativePath,\n        flowTotalChunks: this.fileObj.chunks.length\n      };\n    },\n\n    /**\n     * Get target option with query params\n     * @function\n     * @param params\n     * @returns {string}\n     */\n    getTarget: function(target, params){\n      if (params.length == 0) {\n\treturn target;\n      }\n\n      if(target.indexOf('?') < 0) {\n        target += '?';\n      } else {\n        target += '&';\n      }\n      return target + params.join('&');\n    },\n\n    /**\n     * Makes a GET request without any data to see if the chunk has already\n     * been uploaded in a previous session\n     * @function\n     */\n    test: function () {\n      // Set up request and listen for event\n      this.xhr = new XMLHttpRequest();\n      this.xhr.addEventListener(\"load\", this.testHandler, false);\n      this.xhr.addEventListener(\"error\", this.testHandler, false);\n      var testMethod = evalOpts(this.flowObj.opts.testMethod, this.fileObj, this);\n      var data = this.prepareXhrRequest(testMethod, true);\n      this.xhr.send(data);\n    },\n\n    /**\n     * Finish preprocess state\n     * @function\n     */\n    preprocessFinished: function () {\n      // Re-compute the endByte after the preprocess function to allow an\n      // implementer of preprocess to set the fileObj size\n      this.endByte = this.computeEndByte();\n\n      this.preprocessState = 2;\n      this.send();\n    },\n\n    /**\n     * Finish read state\n     * @function\n     */\n    readFinished: function (bytes) {\n      this.readState = 2;\n      this.bytes = bytes;\n      this.send();\n    },\n\n\n    /**\n     * Uploads the actual data in a POST call\n     * @function\n     */\n    send: function () {\n      var preprocess = this.flowObj.opts.preprocess;\n      var read = this.flowObj.opts.readFileFn;\n      if (typeof preprocess === 'function') {\n        switch (this.preprocessState) {\n          case 0:\n            this.preprocessState = 1;\n            preprocess(this);\n            return;\n          case 1:\n            return;\n        }\n      }\n      switch (this.readState) {\n        case 0:\n          this.readState = 1;\n          read(this.fileObj, this.startByte, this.endByte, this.fileObj.file.type, this);\n          return;\n        case 1:\n          return;\n      }\n      if (this.flowObj.opts.testChunks && !this.tested) {\n        this.test();\n        return;\n      }\n\n      this.loaded = 0;\n      this.total = 0;\n      this.pendingRetry = false;\n\n      // Set up request and listen for event\n      this.xhr = new XMLHttpRequest();\n      this.xhr.upload.addEventListener('progress', this.progressHandler, false);\n      this.xhr.addEventListener(\"load\", this.doneHandler, false);\n      this.xhr.addEventListener(\"error\", this.doneHandler, false);\n\n      var uploadMethod = evalOpts(this.flowObj.opts.uploadMethod, this.fileObj, this);\n      var data = this.prepareXhrRequest(uploadMethod, false, this.flowObj.opts.method, this.bytes);\n      var changeRawDataBeforeSend = this.flowObj.opts.changeRawDataBeforeSend;\n      if (typeof changeRawDataBeforeSend === 'function') {\n        data = changeRawDataBeforeSend(this, data);\n      }\n      this.xhr.send(data);\n    },\n\n    /**\n     * Abort current xhr request\n     * @function\n     */\n    abort: function () {\n      // Abort and reset\n      var xhr = this.xhr;\n      this.xhr = null;\n      if (xhr) {\n        xhr.abort();\n      }\n    },\n\n    /**\n     * Retrieve current chunk upload status\n     * @function\n     * @returns {string} 'pending', 'uploading', 'success', 'error'\n     */\n    status: function (isTest) {\n      if (this.readState === 1) {\n        return 'reading';\n      } else if (this.pendingRetry || this.preprocessState === 1) {\n        // if pending retry then that's effectively the same as actively uploading,\n        // there might just be a slight delay before the retry starts\n        return 'uploading';\n      } else if (!this.xhr) {\n        return 'pending';\n      } else if (this.xhr.readyState < 4) {\n        // Status is really 'OPENED', 'HEADERS_RECEIVED'\n        // or 'LOADING' - meaning that stuff is happening\n        return 'uploading';\n      } else {\n        if (this.flowObj.opts.successStatuses.indexOf(this.xhr.status) > -1) {\n          // HTTP 200, perfect\n\t\t      // HTTP 202 Accepted - The request has been accepted for processing, but the processing has not been completed.\n          return 'success';\n        } else if (this.flowObj.opts.permanentErrors.indexOf(this.xhr.status) > -1 ||\n            !isTest && this.retries >= this.flowObj.opts.maxChunkRetries) {\n          // HTTP 413/415/500/501, permanent error\n          return 'error';\n        } else {\n          // this should never happen, but we'll reset and queue a retry\n          // a likely case for this would be 503 service unavailable\n          this.abort();\n          return 'pending';\n        }\n      }\n    },\n\n    /**\n     * Get response from xhr request\n     * @function\n     * @returns {String}\n     */\n    message: function () {\n      return this.xhr ? this.xhr.responseText : '';\n    },\n\n    /**\n     * Get upload progress\n     * @function\n     * @returns {number}\n     */\n    progress: function () {\n      if (this.pendingRetry) {\n        return 0;\n      }\n      var s = this.status();\n      if (s === 'success' || s === 'error') {\n        return 1;\n      } else if (s === 'pending') {\n        return 0;\n      } else {\n        return this.total > 0 ? this.loaded / this.total : 0;\n      }\n    },\n\n    /**\n     * Count total size uploaded\n     * @function\n     * @returns {number}\n     */\n    sizeUploaded: function () {\n      var size = this.endByte - this.startByte;\n      // can't return only chunk.loaded value, because it is bigger than chunk size\n      if (this.status() !== 'success') {\n        size = this.progress() * size;\n      }\n      return size;\n    },\n\n    /**\n     * Prepare Xhr request. Set query, headers and data\n     * @param {string} method GET or POST\n     * @param {bool} isTest is this a test request\n     * @param {string} [paramsMethod] octet or form\n     * @param {Blob} [blob] to send\n     * @returns {FormData|Blob|Null} data to send\n     */\n    prepareXhrRequest: function(method, isTest, paramsMethod, blob) {\n      // Add data from the query options\n      var query = evalOpts(this.flowObj.opts.query, this.fileObj, this, isTest);\n      query = extend(query || {}, this.getParams());\n\n      var target = evalOpts(this.flowObj.opts.target, this.fileObj, this, isTest);\n      var data = null;\n      if (method === 'GET' || paramsMethod === 'octet') {\n        // Add data from the query options\n        var params = [];\n        each(query, function (v, k) {\n          params.push([encodeURIComponent(k), encodeURIComponent(v)].join('='));\n        });\n        target = this.getTarget(target, params);\n        data = blob || null;\n      } else {\n        // Add data from the query options\n        data = new FormData();\n        each(query, function (v, k) {\n          data.append(k, v);\n        });\n        if (typeof blob !== \"undefined\") {\n            data.append(this.flowObj.opts.fileParameterName, blob, this.filename || this.fileObj.file.name);\n        }\n      }\n\n      this.xhr.open(method, target, true);\n      this.xhr.withCredentials = this.flowObj.opts.withCredentials;\n\n      // Add data from header options\n      each(evalOpts(this.flowObj.opts.headers, this.fileObj, this, isTest), function (v, k) {\n        this.xhr.setRequestHeader(k, v);\n      }, this);\n\n      return data;\n    }\n  };\n\n  /**\n   * Remove value from array\n   * @param array\n   * @param value\n   */\n  function arrayRemove(array, value) {\n    var index = array.indexOf(value);\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n  }\n\n  /**\n   * If option is a function, evaluate it with given params\n   * @param {*} data\n   * @param {...} args arguments of a callback\n   * @returns {*}\n   */\n  function evalOpts(data, args) {\n    if (typeof data === \"function\") {\n      // `arguments` is an object, not array, in FF, so:\n      args = Array.prototype.slice.call(arguments);\n      data = data.apply(null, args.slice(1));\n    }\n    return data;\n  }\n  Flow.evalOpts = evalOpts;\n\n  /**\n   * Execute function asynchronously\n   * @param fn\n   * @param context\n   */\n  function async(fn, context) {\n    setTimeout(fn.bind(context), 0);\n  }\n\n  /**\n   * Extends the destination object `dst` by copying all of the properties from\n   * the `src` object(s) to `dst`. You can specify multiple `src` objects.\n   * @function\n   * @param {Object} dst Destination object.\n   * @param {...Object} src Source object(s).\n   * @returns {Object} Reference to `dst`.\n   */\n  function extend(dst, src) {\n    each(arguments, function(obj) {\n      if (obj !== dst) {\n        each(obj, function(value, key){\n          dst[key] = value;\n        });\n      }\n    });\n    return dst;\n  }\n  Flow.extend = extend;\n\n  /**\n   * Iterate each element of an object\n   * @function\n   * @param {Array|Object} obj object or an array to iterate\n   * @param {Function} callback first argument is a value and second is a key.\n   * @param {Object=} context Object to become context (`this`) for the iterator function.\n   */\n  function each(obj, callback, context) {\n    if (!obj) {\n      return ;\n    }\n    var key;\n    // Is Array?\n    // Array.isArray won't work, not only arrays can be iterated by index https://github.com/flowjs/ng-flow/issues/236#\n    if (typeof(obj.length) !== 'undefined') {\n      for (key = 0; key < obj.length; key++) {\n        if (callback.call(context, obj[key], key) === false) {\n          return ;\n        }\n      }\n    } else {\n      for (key in obj) {\n        if (obj.hasOwnProperty(key) && callback.call(context, obj[key], key) === false) {\n          return ;\n        }\n      }\n    }\n  }\n  Flow.each = each;\n\n  /**\n   * FlowFile constructor\n   * @type {FlowFile}\n   */\n  Flow.FlowFile = FlowFile;\n\n  /**\n   * FlowFile constructor\n   * @type {FlowChunk}\n   */\n  Flow.FlowChunk = FlowChunk;\n\n  /**\n   * Library version\n   * @type {string}\n   */\n  Flow.version = '<%= version %>';\n\n  if ( typeof module === \"object\" && module && typeof module.exports === \"object\" ) {\n    // Expose Flow as module.exports in loaders that implement the Node\n    // module pattern (including browserify). Do not create the global, since\n    // the user will be storing it themselves locally, and globals are frowned\n    // upon in the Node module world.\n    module.exports = Flow;\n  } else {\n    // Otherwise expose Flow to the global object as usual\n    window.Flow = Flow;\n\n    // Register as a named AMD module, since Flow can be concatenated with other\n    // files that may use define, but not via a proper concatenation script that\n    // understands anonymous AMD modules. A named AMD is safest and most robust\n    // way to register. Lowercase flow is used because AMD module names are\n    // derived from file names, and Flow is normally delivered in a lowercase\n    // file name. Do this after creating the global so that if an AMD module wants\n    // to call noConflict to hide this version of Flow, it will work.\n    if ( typeof define === \"function\" && define.amd ) {\n      define( \"flow\", [], function () { return Flow; } );\n    }\n  }\n})(typeof window !== 'undefined' && window, typeof document !== 'undefined' && document);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"div.dash-uploader-button-container {\\n    display: block;\\n}\\n\\nlabel.dash-uploader-label {\\n    font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n.dash-uploader-progress-value {\\n    font-family: Arial, Helvetica, sans-serif;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/lib/components/uploader.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,cAAc;AAClB;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,yCAAyC;AAC7C\",\"sourcesContent\":[\"div.dash-uploader-button-container {\\n    display: block;\\n}\\n\\nlabel.dash-uploader-label {\\n    font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n.dash-uploader-progress-value {\\n    font-family: Arial, Helvetica, sans-serif;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n *  A Button component. \n *  Used as a part of Upload component.\n */\nclass Button extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n\n        return (\n            <button\n                style={{\n                    cursor: this.props.isUploading ? 'pointer' : 'default',\n                }}\n                disabled={this.props.disabled}\n                className={this.props.btnClass + \" btn btn-sm btn-dash-uploader\"}\n                onClick={this.props.onClick}>\n                {this.props.text}\n            </button>\n        )\n    }\n}\n\n\nButton.propTypes = {\n    /**\n     *  The text on the button \n     */\n    text: PropTypes.string,\n    /**\n     *  The CSS class for the button\n     */\n    btnClass: PropTypes.string,\n    /**\n     *  Function to call when clicked\n     */\n    onClick: PropTypes.func,\n    /**\n     *  Is disabled, the component\n     * is not shown.\n     */\n    disabled: PropTypes.bool,\n    /**\n     *  Is true, the parent component\n     *  has upload in progress.\n     */\n    isUploading: PropTypes.bool,\n}\n\nButton.defaultProps = {\n    text: '',\n    btnClass: 'dash-uploader-btn',\n    onClick: () => { },\n    disabled: false,\n    isUploading: false,\n\n};\n\nexport default Button","import React, { Component } from 'react'\n\nimport PropTypes from 'prop-types';\n\n/**\n *  A ProgressBar component. \n *  Used as a part of Upload component.\n */\nclass ProgressBar extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"progress\"\n                style={{\n                    display: this.props.isUploading ? 'flex' : 'none',\n                    textAlign: 'center',\n                    marginTop: '10px',\n                    marginBottom: '10px',\n\n                }}>\n\n\n\n                <div className=\"progress-bar progress-bar-striped progress-bar-animated\"\n                    style={{\n                        width: this.props.progressBar + '%',\n                        height: '100%'\n                    }}>\n\n                    <span className=\"dash-uploader-progress-value\"\n                        style={{\n                            color: 'white'\n                        }}\n                    >{this.props.progressBar.toFixed(2) + '%'}</span>\n\n                </div>\n            </div >\n        )\n    }\n}\n\n\nProgressBar.propTypes = {\n    /**\n     *  The progressbar value \n     */\n    progressBar: PropTypes.number,\n    /**\n     *  The upload status (boolean)\n     */\n    isUploading: PropTypes.bool,\n}\n\nProgressBar.defaultProps = {\n    progressBar: 0,\n    isUploading: false,\n};\n\n\nexport default ProgressBar","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./uploader.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./uploader.css\";\n       export default content && content.locals ? content.locals : undefined;\n","//  https://github.com/np-8/dash-uploader \n// \n// Credits:\n// This file is based on following repositories\n// v.0.0.3 from https://github.com/rmarren1/dash-resumable-upload\n// v.0.0.4 from https://github.com/westonkjones/dash-resumable-upload\n\nimport React, { Component } from 'react';\nimport Flow from '@flowjs/flow.js';\nimport Button from './Button.react.js';\nimport ProgressBar from './ProgressBar.react.js'\nimport PropTypes from 'prop-types';\nimport './uploader.css';\n\n\n/**\n * Convert bytes to Megabytes\n * \n * @param {number} size_bytes - The bytes\n * @return {number} size_mb - Bytes converted to megabytes\n */\nfunction bytest_to_mb(size_bytes) {\n    // Mb = 1024*1024 bytes\n    return size_bytes / 1048576;\n}\n\n\n/**\n *  The Upload component\n */\nexport default class Upload_ReactComponent extends Component {\n\n    static initialState = {\n        progressBar: 0,\n        messageStatus: '',\n        uploadedFiles: [],\n        isPaused: false,\n        isUploading: false,\n        isHovered: false,\n        isComplete: false,\n        showEnabledButtons: false,\n        currentFile: ''\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = Upload_ReactComponent.initialState;\n        this.toggleHovered = this.toggleHovered.bind(this)\n        this.cancelUpload = this.cancelUpload.bind(this)\n        this.pauseUpload = this.pauseUpload.bind(this)\n        this.startUpload = this.startUpload.bind(this)\n        this.createButton = this.createButton.bind(this)\n        this.flow = null\n        // use 'true' to enable debug console log\n        // (for development only!)\n        this.debug = false\n    }\n\n    resetBuilder() {\n        this.setState(Upload_ReactComponent.initialState)\n    }\n\n    componentDidMount() {\n\n        // Full list of options here\n        // https://github.com/flowjs/flow.js#configuration \n        const flowComponent = new Flow({\n            //  The API endpoint\n            target: this.props.service,\n            // Additional data for the requests\n            query: { upload_id: this.props.upload_id },\n            // Chunk size in bytes.\n            chunkSize: this.props.chunkSize,\n            // Number of simultaneous uploads\n            simultaneousUploads: this.props.simultaneousUploads,\n            // Extra headers to include in the multipart POST with data. \n            // If a function, it will be passed a FlowFile, a FlowChunk object and a isTest boolean (Default: {})\n            headers: {},\n            // Once a file is uploaded, allow reupload of the same file. By default, if a file\n            //  is already uploaded, it will be skipped unless the file is removed from the existing \n            // Flow object. (Default: false)\n            allowDuplicateUploads: true,\n            // testChunks Make a GET request to the server for each chunks to see if it already exists. \n            //  If implemented on the server-side, this will allow for upload resumes even after a browser\n            //  crash or even a computer restart. (Default: true) \n            testChunks: false,\n        });\n\n\n        // Clicking the \"this.uploader\" component will open the browse files/folders dialog\n        flowComponent.assignBrowse(this.uploader);\n\n        // Enable or Disable DragAnd Drop\n        if (this.props.disableDragAndDrop === false && this.props.disabled === false) {\n            flowComponent.assignDrop(this.dropZone);\n        }\n\n        // fileAdded and filesAdded events are both triggered whenever\n        // any (one or multiple) files are to be added (through dialog or drag&drop)\n        // to the upload component's upload queue.\n        // \n        // fileAdded must return true for files that should be uploaded\n        // - Use this to check the extension\n        // - Use this to check if the file size is in acceptable limits\n        // - Use this to check if the file already exists on the server\n        // \n        // Not in use, as files are checked on onFilesSubmitted already\n        // flowComponent.on('fileAdded', this.checkFileIsOkayToBeUploaded);\n\n        // filesAdded must also return true for file(s) that should be uploaded\n        // - Use this to check if there are too many files or the \n        //   overall upload size is too large.\n        // Not in use, as files are checked on onFilesSubmitted already\n        // flowComponent.on('filesAdded', this.checkFilesAreOkayToBeUploaded);\n\n\n        // Check files\n        // individual files: size, filetype\n        // sum of all files: size, number of files\n        flowComponent.on('filesSubmitted', this.onFilesSubmitted)\n\n        // Uploading a file is completed\n        // The \"uploadedFileNames\" is a list, even though currently uploading\n        // only one file at a time is supported.\n        // When uploading multiple files, this will be called every time a file upload completes.\n        flowComponent.on('fileSuccess', this.fileSuccess);\n\n\n        flowComponent.on('progress', this.onProgress);\n        flowComponent.on('complete', this.onComplete);\n        flowComponent.on('fileError', this.fileError);\n\n        this.flow = flowComponent;\n    }\n\n    componentDidUpdate(prevProps) {\n        const prevEnableDrop = (prevProps.disableDragAndDrop === false && prevProps.disabled === false);\n        const curEnableDrop = (this.props.disableDragAndDrop === false && this.props.disabled === false);\n\n        if (curEnableDrop !== prevEnableDrop) {\n            if (curEnableDrop) {\n                this.flow.assignDrop(this.dropZone);\n            } else {\n                this.flow.unAssignDrop(this.dropZone);\n            }\n        }\n    }\n\n    checkFileExtensionIsOk = (file) => {\n        if (this.props.filetypes == null) {\n            // All filetypes are accepted\n            return true;\n        }\n        if (file.name.indexOf('.') != -1) {\n            const extension = file.name.split('.').pop()\n            return this.props.filetypes.includes(extension)\n        } else {\n            // no file extension\n            return this.props.filetypes.includes(\"\")\n        }\n    }\n\n    checkFilesAreOkayToBeUploaded = (filearray) => {\n        if (this.debug) {\n            console.log('checkFilesAreOkayToBeUploaded')\n        }\n        if ((this.props.maxFiles !== undefined) && (filearray.length > this.props.maxFiles)) {\n            alert('Trop de fichiers sélectionnés ! Le nombre maximum de fichiers attendu est ' + this.props.maxFiles.toString() + '.')\n            return false\n        }\n        if (this.props.maxTotalSize !== undefined) {\n            var sumOfSizes = 0;\n            this.flow.files.forEach(function (file) {\n                sumOfSizes += file.size\n            }, this);\n            if (sumOfSizes > this.props.maxTotalSize) {\n                alert('Taille totale trop importante (' + bytest_to_mb(sumOfSizes).toFixed(1) + ' Mo) ! La limite est : ' + bytest_to_mb(this.props.maxTotalSize).toFixed(1) + ' Mo')\n                return false\n            }\n        }\n        return true\n    }\n\n    onProgress = () => {\n\n        let parenthesisTxt = (bytest_to_mb(this.flow.sizeUploaded())).toFixed(2)\n            + ' Mb'\n        let filenameTxt = ''\n\n        if (this.props.totalFilesCount > 1) {\n            parenthesisTxt += ', File ' + (this.props.uploadedFileNames.length + 1).toString()\n                + '/' + this.props.totalFilesCount.toString()\n        } else {\n            filenameTxt = this.flow.files[0].name + ' '\n        }\n        this.setState({\n            messageStatus: 'Uploading ' + filenameTxt + '(' + parenthesisTxt + ')',\n            progressBar: this.flow.progress() * 100\n        });\n\n\n\n    };\n\n    onComplete = () => {\n\n        if (this.debug) {\n            console.log('onComplete')\n        }\n        // Make re-upload of a file with same filename possible.\n        this.state.uploadedFiles.forEach(function (file) {\n            this.flow.removeFile(file);\n        }, this);\n\n        this.setState({\n            isUploading: false,\n            showEnabledButtons: false,\n            // messagestatus must be '' in order to \n            // show the this.props.text\n            messageStatus: '',\n        })\n\n        setTimeout(() => {\n            this.setState({ progressBar: 0 })\n        }, 600);\n\n\n    };\n\n    removeAllFilesFromFlow = () => {\n        while (this.flow.files.length > 0) {\n            this.flow.removeFile(this.flow.files[0]);\n        }\n    }\n\n    fileSuccess = (file, message, chunk) => {\n        // file: FlowFile instance\n        // message: string\n        // chunk: FlowChunk instance\n        if (this.debug) {\n            console.log('fileSuccess:', file, message, chunk)\n        }\n\n        file.fileName = message;\n        const uploadedFiles = this.state.uploadedFiles;\n        uploadedFiles.push(file);\n\n        const uploadedFileNames = this.props.uploadedFileNames\n        uploadedFileNames.push(file.fileName);\n\n        if (this.props.setProps) {\n            this.props.setProps({\n                dashAppCallbackBump: this.props.dashAppCallbackBump + 1,\n                uploadedFileNames: uploadedFileNames,\n                uploadedFilesSize: bytest_to_mb(this.flow.sizeUploaded()),\n                totalFilesSize: bytest_to_mb(this.flow.getSize()),\n            });\n        }\n        this.setState({\n            uploadedFiles: uploadedFiles,\n            messageStatus: this.props.completedMessage + file.fileName\n        })\n\n        this.props.setProps({\n            text: this.props.completedMessage + file.fileName\n        });\n    };\n\n\n    fileError = (file, message) => {\n        if (this.debug) {\n            console.log('fileError', file, message)\n        }\n        if (this.debug) {\n            console.log('fileError with flow.js! (file, message)', file, message)\n        }\n        alert('Une erreur a eu lieu au téléversement du fichier ' + file.relativePath + ' !\\nDétails : ' + message);\n        this.cancelUpload();\n        /*\n        if (typeof (this.props.onUploadErrorCallback) !== 'undefined') {\n            this.props.onUploadErrorCallback(file, errorCount);\n        } else {\n            alert('Unexpected error while uploading ' + file.relativePath + '!\\nPlease reupload the file.')\n        }*/\n\n    };\n\n    removeUnsupportedFileTypesFromQueue = () => {\n        var n_bad_file_extension = 0\n        // Remove files that do not have correct file extension.\n        const removeTheseFiles = []\n        this.flow.files.forEach(function (file) {\n            if (this.debug) {\n                console.log('Checking filetype for file', file)\n            }\n            if (!this.checkFileExtensionIsOk(file)) {\n                if (this.debug) {\n                    console.log('Removing file as filetype is not supported', file)\n                }\n                removeTheseFiles.push(file)\n                n_bad_file_extension += 1\n            }\n        }, this);\n\n        removeTheseFiles.forEach(function (file) {\n            this.flow.removeFile(file);\n        }, this);\n\n\n        if (n_bad_file_extension == 1) {\n            alert(\"1 fichier n'a pas pu être téléversé, car son extension ne correspond pas au format attendu ! Les extensions attendues sont : [\" + this.props.filetypes.join(', ') + ']')\n        } else if (n_bad_file_extension > 1) {\n            alert(n_bad_file_extension.toString() + \" fichiers n'ont pas pu être téléversés, car leur extension ne correspond pas au format attendu ! Les extensions attendues sont : [\" + this.props.filetypes.join(', ') + ']')\n        }\n    }\n\n    removeTooLargeFilesFromQueue = () => {\n        var n_too_large_files = 0\n        // Remove files that do not have correct file extension.\n        const removeTheseFiles = []\n        this.flow.files.forEach(function (file) {\n            if (file.size > this.props.maxFileSize) {\n                if (this.debug) {\n                    console.log('Removing file as it is too large', file)\n                }\n                removeTheseFiles.push(file)\n                n_too_large_files += 1\n            }\n        }, this);\n\n        removeTheseFiles.forEach(function (file) {\n            this.flow.removeFile(file);\n        }, this);\n\n        if (n_too_large_files == 1) {\n            alert(\"1 fichier n'a pas pu être téléversé, car sa taille est supérieure à la limite de \" + bytest_to_mb(this.props.maxFileSize).toFixed(1) + 'Mo')\n        } else if (n_too_large_files > 1) {\n            alert(n_too_large_files.toString() + \" fichiers n'ont pas pu être téléversés, car leur taille est supérieure à la limite de \" + bytest_to_mb(this.props.maxFileSize).toFixed(1) + 'Mb')\n        }\n    }\n\n    onFilesSubmitted = (files) => {\n        if (this.debug) {\n            console.log('onFilesSubmitted', files.length, files)\n        }\n\n        this.removeUnsupportedFileTypesFromQueue()\n        this.removeTooLargeFilesFromQueue()\n        const isok = this.checkFilesAreOkayToBeUploaded(this.flow.files)\n        if (!isok) {\n            this.removeAllFilesFromFlow()\n            return\n        }\n\n        this.props.setProps({\n            dashAppCallbackBump: 0,\n            uploadedFileNames: [],\n            totalFilesCount: this.flow.files.length,\n            uploadedFilesSize: 0,\n            totalFilesSize: 0,\n        })\n        this.setState({ showEnabledButtons: true })\n        this.flow.upload()\n        this.setState({ isUploading: true })\n\n    }\n\n    cancelUpload() {\n        this.flow.cancel();\n        this.resetBuilder();\n        this.setState({ isUploading: false })\n    }\n\n    pauseUpload() {\n        if (!this.state.isPaused) {\n            this.flow.pause();\n            this.setState({ isPaused: true });\n        } else {\n            this.flow.resume();\n            this.setState({ isPaused: false });\n        }\n    }\n\n    startUpload() {\n        this.setState({ isPaused: false, isUploading: true, showEnabledButtons: true });\n    }\n\n    toggleHovered() {\n        this.setState({\n            isHovered: !this.state.isHovered\n        })\n    }\n\n    createButton(onClick, text, btnEnabledInSettings, disabled, btnClass) {\n        if (this.state.showEnabledButtons && btnEnabledInSettings) {\n            return <Button text={btnEnabledInSettings && text} btnClass={btnClass} onClick={onClick} disabled={disabled} isUploading={this.state.isUploading}></Button>\n        } else {\n            return null;\n        }\n    }\n\n    getLabel = () => {\n\n        let text = this.props.text ? this.props.text : null\n\n        return <label\n            style={{\n                display: this.state.isUploading ? 'block' : 'inline-block',\n                verticalAlign: 'middle',\n                lineHeight: 'normal',\n                width: this.state.isUploading ? 'auto' : '100%',\n                paddingRight: this.state.isUploading ? '10px' : '0',\n                textAlign: 'center',\n                wordWrap: 'break-word',\n                cursor: this.state.isUploading ? 'default' : 'pointer',\n                fontSize: this.state.isUploading ? '10px' : 'inherit',\n            }}\n            onMouseEnter={this.toggleHovered}\n            onMouseLeave={this.toggleHovered}\n            className=\"dash-uploader-label\"\n        >\n            {(this.state.messageStatus === '') ? text : this.state.messageStatus}\n            <input\n                ref={node => this.uploader = node}\n                type=\"file\"\n                className='btn'\n                name={this.props.id + '-upload'}\n                accept={this.props.filetypes ? (this.props.filetypes.map(ext => ('.' + ext)).join(',')) : '*'}\n                disabled={this.state.isUploading || this.props.disabled}\n                style={{\n                    'opacity': '0',\n                    'width': '0',\n                    'height': '0',\n                    'position': 'absolute',\n                    'overflow': 'hidden',\n                    'zIndex': '-1',\n                }}\n            />\n        </label>\n    }\n\n    render() {\n\n        let startButton = this.createButton(\n            this.startUpload,\n            'upload',\n            this.props.startButton,\n            this.state.isUploading,\n            \"dash-uploader-btn-start btn-outline-secondary \"\n        );\n\n        let cancelButton = this.createButton(\n            this.cancelUpload,\n            'cancel',\n            this.props.cancelButton,\n            !this.state.isUploading,\n            \"dash-uploader-btn-cancel btn-outline-secondary \"\n        );\n\n        let pauseButton = this.createButton(\n            this.pauseUpload,\n            (this.state.isPaused ? 'resume' : 'pause'),\n            this.props.pauseButton,\n            !this.state.isUploading,\n            \"dash-uploader-btn-pause btn-outline-primary \"\n        );\n\n\n        const getStyle = () => {\n            if (this.state.isUploading) {\n                return this.props.uploadingStyle;\n            } else if (this.props.disabled) {\n                return this.props.disabledStyle;\n            } else if (this.state.isComplete) {\n                return this.props.completeStyle;\n            }\n            return this.props.defaultStyle;\n\n        }\n\n        const getClass = () => {\n            let classList = [this.props.className];\n            const classes = {\n                isUploading: this.props.uploadingClass,\n                isPaused: this.props.pausedClass,\n                isHovered: this.props.hoveredClass,\n                isComplete: this.props.completeClass,\n            }\n\n            Object.entries(classes).forEach(([stateProperty, className]) => {\n                this.state[stateProperty] && classList.push(className);\n            });\n\n            this.props.disabled && classList.push(this.props.disabledClass);\n\n            return classList.join(\" \");\n\n        }\n\n\n        return (\n            <div style={getStyle()} id={this.props.id} className={getClass()} ref={node => this.dropZone = node} >\n                <div id={this.props.id + '-padding'}\n                    style={{\n                        padding: '10px',\n                    }}>\n                    {this.getLabel()}\n                    <ProgressBar isUploading={this.state.isUploading} progressBar={this.state.progressBar}></ProgressBar>\n                    <div className='dash-uploader-button-container'>\n                        {cancelButton}\n                        {pauseButton}\n                        {startButton}\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\n\nUpload_ReactComponent.propTypes = {\n    /**\n     * Dash-supplied function for updating props\n     * This is something special to Dash, and is needed\n     * If values are needed to be passed to the python dash backend.\n     */\n    setProps: PropTypes.func,\n\n\n    /**\n     * Maximum number of files that can be uploaded in one session\n     */\n    maxFiles: PropTypes.number,\n\n    /**\n     * Maximum size per file in bytes.\n     */\n    maxFileSize: PropTypes.number,\n\n    /**\n     * Maximum total size in bytes.\n     */\n    maxTotalSize: PropTypes.number,\n\n    /**\n     * Size of file chunks to send to server.\n     */\n    chunkSize: PropTypes.number,\n\n    /**\n     * Number of simultaneous uploads to select\n     */\n    simultaneousUploads: PropTypes.number,\n\n    /**\n     * The service to send the files to\n     */\n    service: PropTypes.string,\n\n    /**\n     * Class to add to the upload component by default\n     */\n    className: PropTypes.string,\n\n    /**\n     * Class to add to the upload component when it is hovered\n     */\n    hoveredClass: PropTypes.string,\n\n    /**\n     * Class to add to the upload component when it is disabled\n     */\n    disabledClass: PropTypes.string,\n\n    /**\n     * Class to add to the upload component when it is paused\n     */\n    pausedClass: PropTypes.string,\n\n    /**\n     * Class to add to the upload component when it is complete\n     */\n    completedClass: PropTypes.string,\n\n    /**\n     * Class to add to the upload component when it is uploading\n     */\n    uploadingClass: PropTypes.string,\n\n    /**\n     * Style attributes to add to the upload component\n     */\n    defaultStyle: PropTypes.object,\n\n    /**\n     * Style when upload is disabled\n     */\n    disabledStyle: PropTypes.object,\n\n    /**\n     * Style when upload is in progress\n     */\n    uploadingStyle: PropTypes.object,\n\n    /**\n     * Style when upload is completed (upload finished)\n     */\n    completeStyle: PropTypes.object,\n\n    /**\n     * The string to display in the upload component\n     */\n    text: PropTypes.string,\n\n    /**\n     * Message to display when upload disabled\n     */\n    disabledMessage: PropTypes.string,\n\n    /**\n     * Message to display when upload completed\n     */\n    completedMessage: PropTypes.string,\n\n    /**\n     * The names of the files uploaded\n     */\n    uploadedFileNames: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * List of allowed file types, e.g. ['jpg', 'png']\n     */\n    filetypes: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * Whether or not to have a start button\n     */\n    startButton: PropTypes.bool,\n\n    /**\n     * Whether or not to have a pause button\n     */\n    pauseButton: PropTypes.bool,\n\n    /**\n     * Whether or not to have a cancel button\n     */\n    cancelButton: PropTypes.bool,\n\n    /**\n     * Whether or not to allow file uploading\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Whether or not to allow file drag and drop\n     */\n    disableDragAndDrop: PropTypes.bool,\n\n\n    /**\n     * Callback to call on error (untested)\n     */\n    onUploadErrorCallback: PropTypes.func,\n\n    /**\n     * User supplied id of this component\n     */\n    id: PropTypes.string,\n\n    /**\n     *  A prop that is monitored by the dash app\n     *  Wheneven the value of this prop is changed,\n     *  all the props are sent to the dash application.\n     * \n     *  This is used in the dash callbacks.\n     */\n    dashAppCallbackBump: PropTypes.number,\n\n    /**\n     *  The ID for the upload event (for example, session ID)\n     */\n    upload_id: PropTypes.string,\n\n\n    /**\n     *  Total number of files to be uploaded.\n     */\n    totalFilesCount: PropTypes.number,\n\n    /**\n     *  Size of uploaded files (Mb). Mb = 1024*1024 bytes.\n     */\n    uploadedFilesSize: PropTypes.number,\n\n    /**\n     *   Total size of uploaded files to be uploaded (Mb). \n     *   Mb = 1024*1024 bytes.\n     */\n    totalFilesSize: PropTypes.number,\n}\n\nUpload_ReactComponent.defaultProps = {\n    maxFiles: 1,\n    maxFileSize: 1024 * 1024 * 10,\n    chunkSize: 1024 * 1024,\n    simultaneousUploads: 1,\n    service: '/API/dash-uploader',\n    className: 'dash-uploader-default',\n    hoveredClass: 'dash-uploader-hovered',\n    completedClass: 'dash-uploader-completed',\n    disabledClass: 'dash-uploader-disabled',\n    pausedClass: 'dash-uploader-paused',\n    uploadingClass: 'dash-uploader-uploading',\n    defaultStyle: {},\n    uploadingStyle: {},\n    completeStyle: {},\n    text: 'Click Here to Select a File',\n    completedMessage: 'Complete! ',\n    uploadedFileNames: [],\n    filetypes: undefined,\n    startButton: true,\n    pauseButton: true,\n    cancelButton: true,\n    disableDragAndDrop: false,\n    id: 'default-dash-uploader-id',\n    onUploadErrorCallback: undefined,\n    dashAppCallbackBump: 0,\n    upload_id: ''\n};"],"names":["window","document","undefined","ie10plus","navigator","msPointerEnabled","Flow","prototype","on","event","callback","toLowerCase","this","events","hasOwnProperty","push","off","fn","array","value","index","indexOf","splice","fire","args","Array","slice","call","arguments","preventDefault","each","apply","unshift","webkitReadDataTransfer","$","queue","dataTransfer","items","length","files","readDirectory","reader","readEntries","entries","entry","isFile","fullPath","file","fileReadSuccess","readError","isDirectory","createReader","decrement","relativePath","substring","fileError","addFiles","item","webkitGetAsEntry","getAsFile","generateUniqueIdentifier","custom","opts","webkitRelativePath","fileName","name","size","replace","uploadNextChunk","preventEvents","found","prioritizeFirstAndLastChunk","paused","chunks","status","send","chunk","outstanding","isComplete","async","assignBrowse","domNodes","singleFile","attributes","Element","domNode","input","tagName","type","createElement","setAttribute","extend","style","visibility","position","width","height","appendChild","addEventListener","click","key","e","target","assignDrop","preventEvent","onDrop","unAssignDrop","removeEventListener","isUploading","uploading","_shouldUploadNext","num","should","simultaneousUploads","upload","ret","started","resume","pause","cancel","i","progress","totalDone","totalSize","addFile","fileList","uniqueIdentifier","allowDuplicateUploads","getFromUniqueIdentifier","f","FlowFile","removeFile","abort","getSize","sizeUploaded","timeRemaining","sizeDelta","averageSpeed","error","Number","POSITIVE_INFINITY","Math","floor","measureSpeed","timeSpan","Date","now","_lastProgressCallback","smoothingFactor","flowObj","speedSmoothingFactor","uploaded","currentSpeed","max","_prevUploadedSize","chunkEvent","message","progressCallbacksInterval","reset","c","retry","bootstrap","initFileFn","_prevProgress","round","forceChunkSize","ceil","chunkSize","evalOpts","offset","FlowChunk","bytesLoaded","endByte","startByte","percent","preprocessState","readState","delta","getType","split","getExtension","substr","lastIndexOf","getParams","flowChunkNumber","flowChunkSize","flowCurrentChunkSize","flowTotalSize","fileObj","flowIdentifier","flowFilename","flowRelativePath","flowTotalChunks","getTarget","params","join","test","xhr","XMLHttpRequest","testHandler","testMethod","data","prepareXhrRequest","preprocessFinished","computeEndByte","readFinished","bytes","preprocess","read","readFileFn","testChunks","tested","loaded","total","pendingRetry","progressHandler","doneHandler","uploadMethod","method","changeRawDataBeforeSend","isTest","readyState","successStatuses","permanentErrors","retries","maxChunkRetries","responseText","s","paramsMethod","blob","query","v","k","encodeURIComponent","FormData","append","fileParameterName","filename","open","withCredentials","headers","setRequestHeader","version","module","exports","console","warn","support","File","Blob","FileList","webkitSlice","mozSlice","supportDirectory","userAgent","defaults","chunkRetryInterval","onDropStopPropagation","webAPIFileRead","stopPropagation","fileType","function_name","min","lengthComputable","retryInterval","setTimeout","context","bind","dst","src","obj","___CSS_LOADER_EXPORT___","id","cssWithMappingToString","list","toString","map","content","needLayer","concat","modules","media","dedupe","supports","layer","alreadyImportedModules","_k","cssMapping","btoa","base64","unescape","JSON","stringify","sourceMapping","sourceURLs","sources","source","sourceRoot","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","css","sourceMap","references","updater","addElementStyle","byIndex","api","domAPI","update","newObj","remove","lastIdentifiers","newList","newLastIdentifiers","_i","_index","memo","insert","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","Error","element","setAttributes","styleElement","nonce","insertStyleElement","styleTagTransform","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","prop","r","Symbol","toStringTag","nmd","paths","children","Button","props","cursor","disabled","className","btnClass","onClick","text","Component","propTypes","PropTypes","defaultProps","ProgressBar","display","textAlign","marginTop","marginBottom","progressBar","color","toFixed","bytest_to_mb","size_bytes","Upload_ReactComponent","checkFileExtensionIsOk","filetypes","extension","pop","includes","checkFilesAreOkayToBeUploaded","filearray","debug","log","maxFiles","alert","maxTotalSize","sumOfSizes","flow","forEach","onProgress","parenthesisTxt","filenameTxt","totalFilesCount","uploadedFileNames","setState","messageStatus","onComplete","state","uploadedFiles","showEnabledButtons","removeAllFilesFromFlow","fileSuccess","setProps","dashAppCallbackBump","uploadedFilesSize","totalFilesSize","completedMessage","cancelUpload","removeUnsupportedFileTypesFromQueue","n_bad_file_extension","removeTheseFiles","removeTooLargeFilesFromQueue","n_too_large_files","maxFileSize","onFilesSubmitted","getLabel","verticalAlign","lineHeight","paddingRight","wordWrap","fontSize","onMouseEnter","toggleHovered","onMouseLeave","ref","node","uploader","accept","ext","initialState","pauseUpload","startUpload","createButton","flowComponent","service","upload_id","disableDragAndDrop","dropZone","prevProps","prevEnableDrop","curEnableDrop","resetBuilder","isPaused","isHovered","btnEnabledInSettings","classList","classes","startButton","cancelButton","pauseButton","uploadingStyle","disabledStyle","completeStyle","defaultStyle","uploadingClass","pausedClass","hoveredClass","completeClass","stateProperty","disabledClass","padding","currentFile","completedClass","disabledMessage","onUploadErrorCallback"],"sourceRoot":""}